{"remainingRequest":"C:\\Users\\吴建明\\Desktop\\VisualizationExcle_Demo\\node_modules\\babel-loader\\lib\\index.js!C:\\Users\\吴建明\\Desktop\\VisualizationExcle_Demo\\node_modules\\eslint-loader\\index.js??ref--13-0!C:\\Users\\吴建明\\Desktop\\VisualizationExcle_Demo\\src\\components\\x-spreadsheet\\core\\format.js","dependencies":[{"path":"C:\\Users\\吴建明\\Desktop\\VisualizationExcle_Demo\\src\\components\\x-spreadsheet\\core\\format.js","mtime":1616639586836},{"path":"C:\\Users\\吴建明\\Desktop\\VisualizationExcle_Demo\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1616639573358},{"path":"C:\\Users\\吴建明\\Desktop\\VisualizationExcle_Demo\\node_modules\\babel-loader\\lib\\index.js","mtime":1616639572994},{"path":"C:\\Users\\吴建明\\Desktop\\VisualizationExcle_Demo\\node_modules\\eslint-loader\\index.js","mtime":1616639576682}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:aW1wb3J0IF90b0NvbnN1bWFibGVBcnJheSBmcm9tICJDOi9Vc2Vycy9cdTU0MzRcdTVFRkFcdTY2MEUvRGVza3RvcC9WaXN1YWxpemF0aW9uRXhjbGVfRGVtby9ub2RlX21vZHVsZXMvQGJhYmVsL3J1bnRpbWUvaGVscGVycy9lc20vdG9Db25zdW1hYmxlQXJyYXkiOwppbXBvcnQgX3RvQXJyYXkgZnJvbSAiQzovVXNlcnMvXHU1NDM0XHU1RUZBXHU2NjBFL0Rlc2t0b3AvVmlzdWFsaXphdGlvbkV4Y2xlX0RlbW8vbm9kZV9tb2R1bGVzL0BiYWJlbC9ydW50aW1lL2hlbHBlcnMvZXNtL3RvQXJyYXkiOwppbXBvcnQgImNvcmUtanMvbW9kdWxlcy9lcy5vYmplY3QudG8tc3RyaW5nLmpzIjsKaW1wb3J0ICJjb3JlLWpzL21vZHVsZXMvZXMucmVnZXhwLnRvLXN0cmluZy5qcyI7CmltcG9ydCAiY29yZS1qcy9tb2R1bGVzL2VzLm51bWJlci50by1maXhlZC5qcyI7CmltcG9ydCAiY29yZS1qcy9tb2R1bGVzL2VzLm51bWJlci5jb25zdHJ1Y3Rvci5qcyI7CmltcG9ydCAiY29yZS1qcy9tb2R1bGVzL2VzLnN0cmluZy5zcGxpdC5qcyI7CmltcG9ydCAiY29yZS1qcy9tb2R1bGVzL2VzLnJlZ2V4cC5leGVjLmpzIjsKaW1wb3J0ICJjb3JlLWpzL21vZHVsZXMvZXMuYXJyYXkuc2xpY2UuanMiOwppbXBvcnQgImNvcmUtanMvbW9kdWxlcy9lcy5hcnJheS5jb25jYXQuanMiOwppbXBvcnQgImNvcmUtanMvbW9kdWxlcy9lcy5zdHJpbmcucmVwbGFjZS5qcyI7CmltcG9ydCAiY29yZS1qcy9tb2R1bGVzL3dlYi5kb20tY29sbGVjdGlvbnMuZm9yLWVhY2guanMiOwppbXBvcnQgeyB0ZiB9IGZyb20gJy4uL2xvY2FsZS9sb2NhbGUnOwoKdmFyIGZvcm1hdFN0cmluZ1JlbmRlciA9IGZ1bmN0aW9uIGZvcm1hdFN0cmluZ1JlbmRlcih2KSB7CiAgcmV0dXJuIHY7Cn07Cgp2YXIgZm9ybWF0TnVtYmVyUmVuZGVyID0gZnVuY3Rpb24gZm9ybWF0TnVtYmVyUmVuZGVyKHYpIHsKICAvLyBtYXRjaCAiLTEyLjEiIG9yICIxMiIgb3IgIjEyLjEiCiAgaWYgKC9eKC0/XGQqLj9cZCopJC8udGVzdCh2KSkgewogICAgdmFyIHYxID0gTnVtYmVyKHYpLnRvRml4ZWQoMikudG9TdHJpbmcoKTsKCiAgICB2YXIgX3YxJHNwbGl0ID0gdjEuc3BsaXQoJ1xcLicpLAogICAgICAgIF92MSRzcGxpdDIgPSBfdG9BcnJheShfdjEkc3BsaXQpLAogICAgICAgIGZpcnN0ID0gX3YxJHNwbGl0MlswXSwKICAgICAgICBwYXJ0cyA9IF92MSRzcGxpdDIuc2xpY2UoMSk7CgogICAgcmV0dXJuIFtmaXJzdC5yZXBsYWNlKC8oXGQpKD89KFxkezN9KSsoPyFcZCkpL2csICckMSwnKV0uY29uY2F0KF90b0NvbnN1bWFibGVBcnJheShwYXJ0cykpOwogIH0KCiAgcmV0dXJuIHY7Cn07Cgp2YXIgYmFzZUZvcm1hdHMgPSBbewogIGtleTogJ25vcm1hbCcsCiAgdGl0bGU6IHRmKCdmb3JtYXQubm9ybWFsJyksCiAgdHlwZTogJ3N0cmluZycsCiAgcmVuZGVyOiBmb3JtYXRTdHJpbmdSZW5kZXIKfSwgewogIGtleTogJ3RleHQnLAogIHRpdGxlOiB0ZignZm9ybWF0LnRleHQnKSwKICB0eXBlOiAnc3RyaW5nJywKICByZW5kZXI6IGZvcm1hdFN0cmluZ1JlbmRlcgp9LCB7CiAga2V5OiAnbnVtYmVyJywKICB0aXRsZTogdGYoJ2Zvcm1hdC5udW1iZXInKSwKICB0eXBlOiAnbnVtYmVyJywKICBsYWJlbDogJzEsMDAwLjEyJywKICByZW5kZXI6IGZvcm1hdE51bWJlclJlbmRlcgp9LCB7CiAga2V5OiAncGVyY2VudCcsCiAgdGl0bGU6IHRmKCdmb3JtYXQucGVyY2VudCcpLAogIHR5cGU6ICdudW1iZXInLAogIGxhYmVsOiAnMTAuMTIlJywKICByZW5kZXI6IGZ1bmN0aW9uIHJlbmRlcih2KSB7CiAgICByZXR1cm4gIiIuY29uY2F0KHYsICIlIik7CiAgfQp9LCB7CiAga2V5OiAncm1iJywKICB0aXRsZTogdGYoJ2Zvcm1hdC5ybWInKSwKICB0eXBlOiAnbnVtYmVyJywKICBsYWJlbDogJ++/pTEwLjAwJywKICByZW5kZXI6IGZ1bmN0aW9uIHJlbmRlcih2KSB7CiAgICByZXR1cm4gIlx1RkZFNSIuY29uY2F0KGZvcm1hdE51bWJlclJlbmRlcih2KSk7CiAgfQp9LCB7CiAga2V5OiAndXNkJywKICB0aXRsZTogdGYoJ2Zvcm1hdC51c2QnKSwKICB0eXBlOiAnbnVtYmVyJywKICBsYWJlbDogJyQxMC4wMCcsCiAgcmVuZGVyOiBmdW5jdGlvbiByZW5kZXIodikgewogICAgcmV0dXJuICIkIi5jb25jYXQoZm9ybWF0TnVtYmVyUmVuZGVyKHYpKTsKICB9Cn0sIHsKICBrZXk6ICdldXInLAogIHRpdGxlOiB0ZignZm9ybWF0LmV1cicpLAogIHR5cGU6ICdudW1iZXInLAogIGxhYmVsOiAn4oKsMTAuMDAnLAogIHJlbmRlcjogZnVuY3Rpb24gcmVuZGVyKHYpIHsKICAgIHJldHVybiAiXHUyMEFDIi5jb25jYXQoZm9ybWF0TnVtYmVyUmVuZGVyKHYpKTsKICB9Cn0sIHsKICBrZXk6ICdkYXRlJywKICB0aXRsZTogdGYoJ2Zvcm1hdC5kYXRlJyksCiAgdHlwZTogJ2RhdGUnLAogIGxhYmVsOiAnMjYvMDkvMjAwOCcsCiAgcmVuZGVyOiBmb3JtYXRTdHJpbmdSZW5kZXIKfSwgewogIGtleTogJ3RpbWUnLAogIHRpdGxlOiB0ZignZm9ybWF0LnRpbWUnKSwKICB0eXBlOiAnZGF0ZScsCiAgbGFiZWw6ICcxNTo1OTowMCcsCiAgcmVuZGVyOiBmb3JtYXRTdHJpbmdSZW5kZXIKfSwgewogIGtleTogJ2RhdGV0aW1lJywKICB0aXRsZTogdGYoJ2Zvcm1hdC5kYXRldGltZScpLAogIHR5cGU6ICdkYXRlJywKICBsYWJlbDogJzI2LzA5LzIwMDggMTU6NTk6MDAnLAogIHJlbmRlcjogZm9ybWF0U3RyaW5nUmVuZGVyCn0sIHsKICBrZXk6ICdkdXJhdGlvbicsCiAgdGl0bGU6IHRmKCdmb3JtYXQuZHVyYXRpb24nKSwKICB0eXBlOiAnZGF0ZScsCiAgbGFiZWw6ICcyNDowMTowMCcsCiAgcmVuZGVyOiBmb3JtYXRTdHJpbmdSZW5kZXIKfV07IC8vIGNvbnN0IGZvcm1hdHMgPSAoYXJ5ID0gW10pID0+IHsKLy8gICBjb25zdCBtYXAgPSB7fTsKLy8gICBiYXNlRm9ybWF0cy5jb25jYXQoYXJ5KS5mb3JFYWNoKChmKSA9PiB7Ci8vICAgICBtYXBbZi5rZXldID0gZjsKLy8gICB9KTsKLy8gICByZXR1cm4gbWFwOwovLyB9OwoKdmFyIGZvcm1hdG0gPSB7fTsKYmFzZUZvcm1hdHMuZm9yRWFjaChmdW5jdGlvbiAoZikgewogIGZvcm1hdG1bZi5rZXldID0gZjsKfSk7CmV4cG9ydCBkZWZhdWx0IHt9OwpleHBvcnQgeyBmb3JtYXRtLCBiYXNlRm9ybWF0cyB9Ow=="},{"version":3,"sources":["C:/Users/吴建明/Desktop/VisualizationExcle_Demo/src/components/x-spreadsheet/core/format.js"],"names":["tf","formatStringRender","v","formatNumberRender","test","v1","Number","toFixed","toString","split","first","parts","replace","baseFormats","key","title","type","render","label","formatm","forEach","f"],"mappings":"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","sourcesContent":["import { tf } from '../locale/locale';\r\n\r\nconst formatStringRender = v => v;\r\n\r\nconst formatNumberRender = (v) => {\r\n  // match \"-12.1\" or \"12\" or \"12.1\"\r\n  if (/^(-?\\d*.?\\d*)$/.test(v)) {\r\n    const v1 = Number(v).toFixed(2).toString();\r\n    const [first, ...parts] = v1.split('\\\\.');\r\n    return [first.replace(/(\\d)(?=(\\d{3})+(?!\\d))/g, '$1,'), ...parts];\r\n  }\r\n  return v;\r\n};\r\n\r\nconst baseFormats = [\r\n  {\r\n    key: 'normal',\r\n    title: tf('format.normal'),\r\n    type: 'string',\r\n    render: formatStringRender,\r\n  },\r\n  {\r\n    key: 'text',\r\n    title: tf('format.text'),\r\n    type: 'string',\r\n    render: formatStringRender,\r\n  },\r\n  {\r\n    key: 'number',\r\n    title: tf('format.number'),\r\n    type: 'number',\r\n    label: '1,000.12',\r\n    render: formatNumberRender,\r\n  },\r\n  {\r\n    key: 'percent',\r\n    title: tf('format.percent'),\r\n    type: 'number',\r\n    label: '10.12%',\r\n    render: v => `${v}%`,\r\n  },\r\n  {\r\n    key: 'rmb',\r\n    title: tf('format.rmb'),\r\n    type: 'number',\r\n    label: '￥10.00',\r\n    render: v => `￥${formatNumberRender(v)}`,\r\n  },\r\n  {\r\n    key: 'usd',\r\n    title: tf('format.usd'),\r\n    type: 'number',\r\n    label: '$10.00',\r\n    render: v => `$${formatNumberRender(v)}`,\r\n  },\r\n  {\r\n    key: 'eur',\r\n    title: tf('format.eur'),\r\n    type: 'number',\r\n    label: '€10.00',\r\n    render: v => `€${formatNumberRender(v)}`,\r\n  },\r\n  {\r\n    key: 'date',\r\n    title: tf('format.date'),\r\n    type: 'date',\r\n    label: '26/09/2008',\r\n    render: formatStringRender,\r\n  },\r\n  {\r\n    key: 'time',\r\n    title: tf('format.time'),\r\n    type: 'date',\r\n    label: '15:59:00',\r\n    render: formatStringRender,\r\n  },\r\n  {\r\n    key: 'datetime',\r\n    title: tf('format.datetime'),\r\n    type: 'date',\r\n    label: '26/09/2008 15:59:00',\r\n    render: formatStringRender,\r\n  },\r\n  {\r\n    key: 'duration',\r\n    title: tf('format.duration'),\r\n    type: 'date',\r\n    label: '24:01:00',\r\n    render: formatStringRender,\r\n  },\r\n];\r\n\r\n// const formats = (ary = []) => {\r\n//   const map = {};\r\n//   baseFormats.concat(ary).forEach((f) => {\r\n//     map[f.key] = f;\r\n//   });\r\n//   return map;\r\n// };\r\nconst formatm = {};\r\nbaseFormats.forEach((f) => {\r\n  formatm[f.key] = f;\r\n});\r\n\r\nexport default {\r\n};\r\nexport {\r\n  formatm,\r\n  baseFormats,\r\n};\r\n"]}]}