{"remainingRequest":"C:\\Users\\吴建明\\Desktop\\VisualizationExcle_Demo\\node_modules\\babel-loader\\lib\\index.js!C:\\Users\\吴建明\\Desktop\\VisualizationExcle_Demo\\node_modules\\eslint-loader\\index.js??ref--13-0!C:\\Users\\吴建明\\Desktop\\VisualizationExcle_Demo\\src\\components\\x-spreadsheet\\core\\data_proxy.js","dependencies":[{"path":"C:\\Users\\吴建明\\Desktop\\VisualizationExcle_Demo\\src\\components\\x-spreadsheet\\core\\data_proxy.js","mtime":1615364198220},{"path":"C:\\Users\\吴建明\\Desktop\\VisualizationExcle_Demo\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1615364186494},{"path":"C:\\Users\\吴建明\\Desktop\\VisualizationExcle_Demo\\node_modules\\babel-loader\\lib\\index.js","mtime":1615364186192},{"path":"C:\\Users\\吴建明\\Desktop\\VisualizationExcle_Demo\\node_modules\\eslint-loader\\index.js","mtime":1615364189991}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"},{"version":3,"sources":["C:/Users/吴建明/Desktop/VisualizationExcle_Demo/src/components/x-spreadsheet/core/data_proxy.js"],"names":["Selector","Scroll","History","Clipboard","AutoFilter","Merges","helper","Rows","Cols","Validations","CellRange","expr2xy","xy2expr","t","defaultSettings","mode","view","height","document","documentElement","clientHeight","width","clientWidth","showGrid","showToolbar","showContextmenu","row","len","col","indexWidth","minWidth","style","bgcolor","align","valign","textwrap","strike","underline","color","font","name","size","bold","italic","format","toolbarHeight","bottombarHeight","canPaste","src","dst","error","merges","cellRange","clone","srn","scn","drn","dcn","eri","sri","eci","sci","intersects","copyPaste","srcCellRange","dstCellRange","what","autofill","rows","deleteCells","deleteWithin","ri","ci","cell","merge","rn","cn","add","cutPaste","clipboard","move","clear","setStyleBorder","bss","styles","getCellOrNew","cstyle","undefined","cloneDeep","border","addStyle","setStyleBorders","selector","range","multiple","isSignleSelected","call","top","bottom","left","right","each","getCell","ns","mergeIndexes","ii","length","mri","mci","push","forEach","it","splice","mrl","mcl","Object","keys","getCellMerge","getCellRowByY","y","scrollOffsety","fsh","freezeTotalHeight","inits","frset","exceptRowSet","has","getHeight","getCellColByX","x","scrollOffsetx","cols","fsw","freezeTotalWidth","rangeReduceIf","i","getWidth","DataProxy","settings","freeze","validations","hyperlinks","comments","scroll","history","autoFilter","change","Set","sortedRowMap","Map","unsortedRowMap","ref","validator","changeData","remove","v","get","ret","toString","canUndo","canRedo","undo","getData","d","setData","redo","copy","cut","isClear","isCopy","isCut","txt","lines","split","map","replace","paste","srcRange","cri","cci","nri","nci","union","getFirstIncludes","property","value","unmerge","text","nfont","assign","state","oldCell","oldText","setCellText","active","filter","getFilter","vIndex","findIndex","getSelectedRect","x1","y1","getRect","l","sumWidth","sumHeight","left0","top0","totalWidth","totalHeight","cellRect","setCell","deleteCell","order","operator","addFilter","setSort","resetAutoFilter","sort","filteredRows","r","c","rset","fset","fary","Array","from","oldAry","a","b","index","set","type","n","si","insert","insertColumn","shift","rsize","csize","delete","deleteColumn","cb","fci","fri","cellStyle","defaultStyle","getCellStyleOrDefault","validate","setHeight","setWidth","h","maxCell","w","exceptRows","exceptRowTH","viewHeight","j","viewWidth","viewRange","filterIntersects","rlen","clen","setHide","unhide","min","max","frary","offset","rowHeight","colWidth","nstyle","equals","autofilter"],"mappings":"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","sourcesContent":["/* global document */\r\n\r\nimport Selector from './selector';\r\nimport Scroll from './scroll';\r\nimport History from './history';\r\nimport Clipboard from './clipboard';\r\nimport AutoFilter from './auto_filter';\r\nimport { Merges } from './merge';\r\nimport helper from './helper';\r\nimport { Rows } from './row';\r\nimport { Cols } from './col';\r\nimport { Validations } from './validation';\r\nimport { CellRange } from './cell_range';\r\nimport { expr2xy, xy2expr } from './alphabet';\r\nimport { t } from '../locale/locale';\r\n\r\n// private methods\r\n/*\r\n * {\r\n *  name: ''\r\n *  freeze: [0, 0],\r\n *  formats: [],\r\n *  styles: [\r\n *    {\r\n *      bgcolor: '',\r\n *      align: '',\r\n *      valign: '',\r\n *      textwrap: false,\r\n *      strike: false,\r\n *      underline: false,\r\n *      color: '',\r\n *      format: 1,\r\n *      border: {\r\n *        left: [style, color],\r\n *        right: [style, color],\r\n *        top: [style, color],\r\n *        bottom: [style, color],\r\n *      },\r\n *      font: {\r\n *        name: 'Helvetica',\r\n *        size: 10,\r\n *        bold: false,\r\n *        italic: false,\r\n *      }\r\n *    }\r\n *  ],\r\n *  merges: [\r\n *    'A1:F11',\r\n *    ...\r\n *  ],\r\n *  rows: {\r\n *    1: {\r\n *      height: 50,\r\n *      style: 1,\r\n *      cells: {\r\n *        1: {\r\n *          style: 2,\r\n *          type: 'string',\r\n *          text: '',\r\n *          value: '', // cal result\r\n *        }\r\n *      }\r\n *    },\r\n *    ...\r\n *  },\r\n *  cols: {\r\n *    2: { width: 100, style: 1 }\r\n *  }\r\n * }\r\n */\r\nconst defaultSettings = {\r\n  mode: 'edit', // edit | read\r\n  view: {\r\n    height: () => document.documentElement.clientHeight,\r\n    width: () => document.documentElement.clientWidth,\r\n  },\r\n  showGrid: true,\r\n  showToolbar: true,\r\n  showContextmenu: true,\r\n  row: {\r\n    len: 100,\r\n    height: 25,\r\n  },\r\n  col: {\r\n    len: 26,\r\n    width: 100,\r\n    indexWidth: 60,\r\n    minWidth: 60,\r\n  },\r\n  style: {\r\n    bgcolor: '#ffffff',\r\n    align: 'left',\r\n    valign: 'middle',\r\n    textwrap: false,\r\n    strike: false,\r\n    underline: false,\r\n    color: '#0a0a0a',\r\n    font: {\r\n      name: 'Arial',\r\n      size: 10,\r\n      bold: false,\r\n      italic: false,\r\n    },\r\n    format: 'normal',\r\n  },\r\n};\r\n\r\nconst toolbarHeight = 41;\r\nconst bottombarHeight = 41;\r\n\r\n\r\n// src: cellRange\r\n// dst: cellRange\r\nfunction canPaste(src, dst, error = () => {}) {\r\n  const { merges } = this;\r\n  const cellRange = dst.clone();\r\n  const [srn, scn] = src.size();\r\n  const [drn, dcn] = dst.size();\r\n  if (srn > drn) {\r\n    cellRange.eri = dst.sri + srn - 1;\r\n  }\r\n  if (scn > dcn) {\r\n    cellRange.eci = dst.sci + scn - 1;\r\n  }\r\n  if (merges.intersects(cellRange)) {\r\n    error(t('error.pasteForMergedCell'));\r\n    return false;\r\n  }\r\n  return true;\r\n}\r\nfunction copyPaste(srcCellRange, dstCellRange, what, autofill = false) {\r\n  const { rows, merges } = this;\r\n  // delete dest merge\r\n  if (what === 'all' || what === 'format') {\r\n    rows.deleteCells(dstCellRange, what);\r\n    merges.deleteWithin(dstCellRange);\r\n  }\r\n  rows.copyPaste(srcCellRange, dstCellRange, what, autofill, (ri, ci, cell) => {\r\n    if (cell && cell.merge) {\r\n      // console.log('cell:', ri, ci, cell);\r\n      const [rn, cn] = cell.merge;\r\n      if (rn <= 0 && cn <= 0) return;\r\n      merges.add(new CellRange(ri, ci, ri + rn, ci + cn));\r\n    }\r\n  });\r\n}\r\n\r\nfunction cutPaste(srcCellRange, dstCellRange) {\r\n  const { clipboard, rows, merges } = this;\r\n  rows.cutPaste(srcCellRange, dstCellRange);\r\n  merges.move(srcCellRange,\r\n    dstCellRange.sri - srcCellRange.sri,\r\n    dstCellRange.sci - srcCellRange.sci);\r\n  clipboard.clear();\r\n}\r\n\r\n// bss: { top, bottom, left, right }\r\nfunction setStyleBorder(ri, ci, bss) {\r\n  const { styles, rows } = this;\r\n  const cell = rows.getCellOrNew(ri, ci);\r\n  let cstyle = {};\r\n  if (cell.style !== undefined) {\r\n    cstyle = helper.cloneDeep(styles[cell.style]);\r\n  }\r\n  cstyle = helper.merge(cstyle, { border: bss });\r\n  cell.style = this.addStyle(cstyle);\r\n}\r\n\r\nfunction setStyleBorders({ mode, style, color }) {\r\n  const { styles, selector, rows } = this;\r\n  const {\r\n    sri, sci, eri, eci,\r\n  } = selector.range;\r\n  const multiple = !this.isSignleSelected();\r\n  if (!multiple) {\r\n    if (mode === 'inside' || mode === 'horizontal' || mode === 'vertical') {\r\n      return;\r\n    }\r\n  }\r\n  if (mode === 'outside' && !multiple) {\r\n    setStyleBorder.call(this, sri, sci, {\r\n      top: [style, color], bottom: [style, color], left: [style, color], right: [style, color],\r\n    });\r\n  } else if (mode === 'none') {\r\n    selector.range.each((ri, ci) => {\r\n      const cell = rows.getCell(ri, ci);\r\n      if (cell && cell.style !== undefined) {\r\n        const ns = helper.cloneDeep(styles[cell.style]);\r\n        delete ns.border;\r\n        // ['bottom', 'top', 'left', 'right'].forEach((prop) => {\r\n        //   if (ns[prop]) delete ns[prop];\r\n        // });\r\n        cell.style = this.addStyle(ns);\r\n      }\r\n    });\r\n  } else if (mode === 'all' || mode === 'inside' || mode === 'outside'\r\n    || mode === 'horizontal' || mode === 'vertical') {\r\n    const merges = [];\r\n    for (let ri = sri; ri <= eri; ri += 1) {\r\n      for (let ci = sci; ci <= eci; ci += 1) {\r\n        // jump merges -- start\r\n        const mergeIndexes = [];\r\n        for (let ii = 0; ii < merges.length; ii += 1) {\r\n          const [mri, mci, rn, cn] = merges[ii];\r\n          if (ri === mri + rn + 1) mergeIndexes.push(ii);\r\n          if (mri <= ri && ri <= mri + rn) {\r\n            if (ci === mci) {\r\n              ci += cn + 1;\r\n              break;\r\n            }\r\n          }\r\n        }\r\n        mergeIndexes.forEach(it => merges.splice(it, 1));\r\n        if (ci > eci) break;\r\n        // jump merges -- end\r\n        const cell = rows.getCell(ri, ci);\r\n        let [rn, cn] = [0, 0];\r\n        if (cell && cell.merge) {\r\n          [rn, cn] = cell.merge;\r\n          merges.push([ri, ci, rn, cn]);\r\n        }\r\n        const mrl = rn > 0 && ri + rn === eri;\r\n        const mcl = cn > 0 && ci + cn === eci;\r\n        let bss = {};\r\n        if (mode === 'all') {\r\n          bss = {\r\n            bottom: [style, color],\r\n            top: [style, color],\r\n            left: [style, color],\r\n            right: [style, color],\r\n          };\r\n        } else if (mode === 'inside') {\r\n          if (!mcl && ci < eci) bss.right = [style, color];\r\n          if (!mrl && ri < eri) bss.bottom = [style, color];\r\n        } else if (mode === 'horizontal') {\r\n          if (!mrl && ri < eri) bss.bottom = [style, color];\r\n        } else if (mode === 'vertical') {\r\n          if (!mcl && ci < eci) bss.right = [style, color];\r\n        } else if (mode === 'outside' && multiple) {\r\n          if (sri === ri) bss.top = [style, color];\r\n          if (mrl || eri === ri) bss.bottom = [style, color];\r\n          if (sci === ci) bss.left = [style, color];\r\n          if (mcl || eci === ci) bss.right = [style, color];\r\n        }\r\n        if (Object.keys(bss).length > 0) {\r\n          setStyleBorder.call(this, ri, ci, bss);\r\n        }\r\n        ci += cn;\r\n      }\r\n    }\r\n  } else if (mode === 'top' || mode === 'bottom') {\r\n    for (let ci = sci; ci <= eci; ci += 1) {\r\n      if (mode === 'top') {\r\n        setStyleBorder.call(this, sri, ci, { top: [style, color] });\r\n        ci += rows.getCellMerge(sri, ci)[1];\r\n      }\r\n      if (mode === 'bottom') {\r\n        setStyleBorder.call(this, eri, ci, { bottom: [style, color] });\r\n        ci += rows.getCellMerge(eri, ci)[1];\r\n      }\r\n    }\r\n  } else if (mode === 'left' || mode === 'right') {\r\n    for (let ri = sri; ri <= eri; ri += 1) {\r\n      if (mode === 'left') {\r\n        setStyleBorder.call(this, ri, sci, { left: [style, color] });\r\n        ri += rows.getCellMerge(ri, sci)[0];\r\n      }\r\n      if (mode === 'right') {\r\n        setStyleBorder.call(this, ri, eci, { right: [style, color] });\r\n        ri += rows.getCellMerge(ri, eci)[0];\r\n      }\r\n    }\r\n  }\r\n}\r\n\r\nfunction getCellRowByY(y, scrollOffsety) {\r\n  const { rows } = this;\r\n  const fsh = this.freezeTotalHeight();\r\n  // console.log('y:', y, ', fsh:', fsh);\r\n  let inits = rows.height;\r\n  if (fsh + rows.height < y) inits -= scrollOffsety;\r\n\r\n  // handle ri in autofilter\r\n  const frset = this.exceptRowSet;\r\n\r\n  let ri = 0;\r\n  let top = inits;\r\n  let { height } = rows;\r\n  for (; ri < rows.len; ri += 1) {\r\n    if (top > y) break;\r\n    if (!frset.has(ri)) {\r\n      height = rows.getHeight(ri);\r\n      top += height;\r\n    }\r\n  }\r\n  top -= height;\r\n  // console.log('ri:', ri, ', top:', top, ', height:', height);\r\n\r\n  if (top <= 0) {\r\n    return { ri: -1, top: 0, height };\r\n  }\r\n\r\n  return { ri: ri - 1, top, height };\r\n}\r\n\r\nfunction getCellColByX(x, scrollOffsetx) {\r\n  const { cols } = this;\r\n  const fsw = this.freezeTotalWidth();\r\n  let inits = cols.indexWidth;\r\n  if (fsw + cols.indexWidth < x) inits -= scrollOffsetx;\r\n  const [ci, left, width] = helper.rangeReduceIf(\r\n    0,\r\n    cols.len,\r\n    inits,\r\n    cols.indexWidth,\r\n    x,\r\n    i => cols.getWidth(i),\r\n  );\r\n  if (left <= 0) {\r\n    return { ci: -1, left: 0, width: cols.indexWidth };\r\n  }\r\n  return { ci: ci - 1, left, width };\r\n}\r\n\r\nexport default class DataProxy {\r\n  constructor(name, settings) {\r\n    this.settings = helper.merge(defaultSettings, settings || {});\r\n    // save data begin\r\n    this.name = name || 'sheet';\r\n    this.freeze = [0, 0];\r\n    this.styles = []; // Array<Style>\r\n    this.merges = new Merges(); // [CellRange, ...]\r\n    this.rows = new Rows(this.settings.row);\r\n    this.cols = new Cols(this.settings.col);\r\n    this.validations = new Validations();\r\n    this.hyperlinks = {};\r\n    this.comments = {};\r\n    // save data end\r\n\r\n    // don't save object\r\n    this.selector = new Selector();\r\n    this.scroll = new Scroll();\r\n    this.history = new History();\r\n    this.clipboard = new Clipboard();\r\n    this.autoFilter = new AutoFilter();\r\n    this.change = () => {};\r\n    this.exceptRowSet = new Set();\r\n    this.sortedRowMap = new Map();\r\n    this.unsortedRowMap = new Map();\r\n  }\r\n\r\n  addValidation(mode, ref, validator) {\r\n    // console.log('mode:', mode, ', ref:', ref, ', validator:', validator);\r\n    this.changeData(() => {\r\n      this.validations.add(mode, ref, validator);\r\n    });\r\n  }\r\n\r\n  removeValidation() {\r\n    const { range } = this.selector;\r\n    this.changeData(() => {\r\n      this.validations.remove(range);\r\n    });\r\n  }\r\n\r\n  getSelectedValidator() {\r\n    const { ri, ci } = this.selector;\r\n    const v = this.validations.get(ri, ci);\r\n    return v ? v.validator : null;\r\n  }\r\n\r\n  getSelectedValidation() {\r\n    const { ri, ci, range } = this.selector;\r\n    const v = this.validations.get(ri, ci);\r\n    const ret = { ref: range.toString() };\r\n    if (v !== null) {\r\n      ret.mode = v.mode;\r\n      ret.validator = v.validator;\r\n    }\r\n    return ret;\r\n  }\r\n\r\n  canUndo() {\r\n    return this.history.canUndo();\r\n  }\r\n\r\n  canRedo() {\r\n    return this.history.canRedo();\r\n  }\r\n\r\n  undo() {\r\n    this.history.undo(this.getData(), (d) => {\r\n      this.setData(d);\r\n    });\r\n  }\r\n\r\n  redo() {\r\n    this.history.redo(this.getData(), (d) => {\r\n      this.setData(d);\r\n    });\r\n  }\r\n\r\n  copy() {\r\n    this.clipboard.copy(this.selector.range);\r\n  }\r\n\r\n  cut() {\r\n    this.clipboard.cut(this.selector.range);\r\n  }\r\n\r\n  // what: all | text | format\r\n  paste(what = 'all', error = () => {}) {\r\n    // console.log('sIndexes:', sIndexes);\r\n    const { clipboard, selector } = this;\r\n    if (clipboard.isClear()) return false;\r\n    if (!canPaste.call(this, clipboard.range, selector.range, error)) return false;\r\n\r\n    this.changeData(() => {\r\n      if (clipboard.isCopy()) {\r\n        copyPaste.call(this, clipboard.range, selector.range, what);\r\n      } else if (clipboard.isCut()) {\r\n        cutPaste.call(this, clipboard.range, selector.range);\r\n      }\r\n    });\r\n    return true;\r\n  }\r\n\r\n  pasteFromText(txt) {\r\n    const lines = txt.split('\\r\\n').map(it => it.replace(/\"/g, '').split('\\t'));\r\n    if (lines.length > 0) lines.length -= 1;\r\n    const { rows, selector } = this;\r\n    this.changeData(() => {\r\n      rows.paste(lines, selector.range);\r\n    });\r\n  }\r\n\r\n  autofill(cellRange, what, error = () => {}) {\r\n    const srcRange = this.selector.range;\r\n    if (!canPaste.call(this, srcRange, cellRange, error)) return false;\r\n    this.changeData(() => {\r\n      copyPaste.call(this, srcRange, cellRange, what, true);\r\n    });\r\n    return true;\r\n  }\r\n\r\n  clearClipboard() {\r\n    this.clipboard.clear();\r\n  }\r\n\r\n  calSelectedRangeByEnd(ri, ci) {\r\n    const {\r\n      selector, rows, cols, merges,\r\n    } = this;\r\n    let {\r\n      sri, sci, eri, eci,\r\n    } = selector.range;\r\n    const cri = selector.ri;\r\n    const cci = selector.ci;\r\n    let [nri, nci] = [ri, ci];\r\n    if (ri < 0) nri = rows.len - 1;\r\n    if (ci < 0) nci = cols.len - 1;\r\n    if (nri > cri) [sri, eri] = [cri, nri];\r\n    else [sri, eri] = [nri, cri];\r\n    if (nci > cci) [sci, eci] = [cci, nci];\r\n    else [sci, eci] = [nci, cci];\r\n    selector.range = merges.union(new CellRange(\r\n      sri, sci, eri, eci,\r\n    ));\r\n    selector.range = merges.union(selector.range);\r\n    // console.log('selector.range:', selector.range);\r\n    return selector.range;\r\n  }\r\n\r\n  calSelectedRangeByStart(ri, ci) {\r\n    const {\r\n      selector, rows, cols, merges,\r\n    } = this;\r\n    let cellRange = merges.getFirstIncludes(ri, ci);\r\n    // console.log('cellRange:', cellRange, ri, ci, merges);\r\n    if (cellRange === null) {\r\n      cellRange = new CellRange(ri, ci, ri, ci);\r\n      if (ri === -1) {\r\n        cellRange.sri = 0;\r\n        cellRange.eri = rows.len - 1;\r\n      }\r\n      if (ci === -1) {\r\n        cellRange.sci = 0;\r\n        cellRange.eci = cols.len - 1;\r\n      }\r\n    }\r\n    selector.range = cellRange;\r\n    return cellRange;\r\n  }\r\n\r\n  setSelectedCellAttr(property, value) {\r\n    this.changeData(() => {\r\n      const { selector, styles, rows } = this;\r\n      if (property === 'merge') {\r\n        if (value) this.merge();\r\n        else this.unmerge();\r\n      } else if (property === 'border') {\r\n        setStyleBorders.call(this, value);\r\n      } else if (property === 'formula') {\r\n        // console.log('>>>', selector.multiple());\r\n        const { ri, ci, range } = selector;\r\n        if (selector.multiple()) {\r\n          const [rn, cn] = selector.size();\r\n          const {\r\n            sri, sci, eri, eci,\r\n          } = range;\r\n          if (rn > 1) {\r\n            for (let i = sci; i <= eci; i += 1) {\r\n              const cell = rows.getCellOrNew(eri + 1, i);\r\n              cell.text = `=${value}(${xy2expr(i, sri)}:${xy2expr(i, eri)})`;\r\n            }\r\n          } else if (cn > 1) {\r\n            const cell = rows.getCellOrNew(ri, eci + 1);\r\n            cell.text = `=${value}(${xy2expr(sci, ri)}:${xy2expr(eci, ri)})`;\r\n          }\r\n        } else {\r\n          const cell = rows.getCellOrNew(ri, ci);\r\n          cell.text = `=${value}()`;\r\n        }\r\n      } else {\r\n        selector.range.each((ri, ci) => {\r\n          const cell = rows.getCellOrNew(ri, ci);\r\n          let cstyle = {};\r\n          if (cell.style !== undefined) {\r\n            cstyle = helper.cloneDeep(styles[cell.style]);\r\n          }\r\n          if (property === 'format') {\r\n            cstyle.format = value;\r\n            cell.style = this.addStyle(cstyle);\r\n          } else if (property === 'font-bold' || property === 'font-italic'\r\n            || property === 'font-name' || property === 'font-size') {\r\n            const nfont = {};\r\n            nfont[property.split('-')[1]] = value;\r\n            cstyle.font = Object.assign(cstyle.font || {}, nfont);\r\n            cell.style = this.addStyle(cstyle);\r\n          } else if (property === 'strike' || property === 'textwrap'\r\n            || property === 'underline'\r\n            || property === 'align' || property === 'valign'\r\n            || property === 'color' || property === 'bgcolor') {\r\n            cstyle[property] = value;\r\n            cell.style = this.addStyle(cstyle);\r\n          } else {\r\n            cell[property] = value;\r\n          }\r\n        });\r\n      }\r\n    });\r\n  }\r\n\r\n  // state: input | finished\r\n  setSelectedCellText(text, state = 'input') {\r\n    const { autoFilter, selector, rows } = this;\r\n    const { ri, ci } = selector;\r\n    let nri = ri;\r\n    if (this.unsortedRowMap.has(ri)) {\r\n      nri = this.unsortedRowMap.get(ri);\r\n    }\r\n    const oldCell = rows.getCell(nri, ci);\r\n    const oldText = oldCell ? oldCell.text : '';\r\n    this.setCellText(nri, ci, text, state);\r\n    // replace filter.value\r\n    if (autoFilter.active()) {\r\n      const filter = autoFilter.getFilter(ci);\r\n      if (filter) {\r\n        const vIndex = filter.value.findIndex(v => v === oldText);\r\n        if (vIndex >= 0) {\r\n          filter.value.splice(vIndex, 1, text);\r\n        }\r\n        // console.log('filter:', filter, oldCell);\r\n      }\r\n    }\r\n    // this.resetAutoFilter();\r\n  }\r\n\r\n  getSelectedCell() {\r\n    const { ri, ci } = this.selector;\r\n    let nri = ri;\r\n    if (this.unsortedRowMap.has(ri)) {\r\n      nri = this.unsortedRowMap.get(ri);\r\n    }\r\n    return this.rows.getCell(nri, ci);\r\n  }\r\n\r\n  xyInSelectedRect(x, y) {\r\n    const {\r\n      left, top, width, height,\r\n    } = this.getSelectedRect();\r\n    const x1 = x - this.cols.indexWidth;\r\n    const y1 = y - this.rows.height;\r\n    // console.log('x:', x, ',y:', y, 'left:', left, 'top:', top);\r\n    return x1 > left && x1 < (left + width)\r\n      && y1 > top && y1 < (top + height);\r\n  }\r\n\r\n  getSelectedRect() {\r\n    return this.getRect(this.selector.range);\r\n  }\r\n\r\n  getClipboardRect() {\r\n    const { clipboard } = this;\r\n    if (!clipboard.isClear()) {\r\n      return this.getRect(clipboard.range);\r\n    }\r\n    return { left: -100, top: -100 };\r\n  }\r\n\r\n  getRect(cellRange) {\r\n    const {\r\n      scroll, rows, cols, exceptRowSet,\r\n    } = this;\r\n    const {\r\n      sri, sci, eri, eci,\r\n    } = cellRange;\r\n    // console.log('sri:', sri, ',sci:', sci, ', eri:', eri, ', eci:', eci);\r\n    // no selector\r\n    if (sri < 0 && sci < 0) {\r\n      return {\r\n        left: 0, l: 0, top: 0, t: 0, scroll,\r\n      };\r\n    }\r\n    const left = cols.sumWidth(0, sci);\r\n    const top = rows.sumHeight(0, sri, exceptRowSet);\r\n    const height = rows.sumHeight(sri, eri + 1, exceptRowSet);\r\n    const width = cols.sumWidth(sci, eci + 1);\r\n    // console.log('sri:', sri, ', sci:', sci, ', eri:', eri, ', eci:', eci);\r\n    let left0 = left - scroll.x;\r\n    let top0 = top - scroll.y;\r\n    const fsh = this.freezeTotalHeight();\r\n    const fsw = this.freezeTotalWidth();\r\n    if (fsw > 0 && fsw > left) {\r\n      left0 = left;\r\n    }\r\n    if (fsh > 0 && fsh > top) {\r\n      top0 = top;\r\n    }\r\n    return {\r\n      l: left,\r\n      t: top,\r\n      left: left0,\r\n      top: top0,\r\n      height,\r\n      width,\r\n      scroll,\r\n    };\r\n  }\r\n\r\n  getCellRectByXY(x, y) {\r\n    const {\r\n      scroll, merges, rows, cols,\r\n    } = this;\r\n    let { ri, top, height } = getCellRowByY.call(this, y, scroll.y);\r\n    let { ci, left, width } = getCellColByX.call(this, x, scroll.x);\r\n    if (ci === -1) {\r\n      width = cols.totalWidth();\r\n    }\r\n    if (ri === -1) {\r\n      height = rows.totalHeight();\r\n    }\r\n    if (ri >= 0 || ci >= 0) {\r\n      const merge = merges.getFirstIncludes(ri, ci);\r\n      if (merge) {\r\n        ri = merge.sri;\r\n        ci = merge.sci;\r\n        ({\r\n          left, top, width, height,\r\n        } = this.cellRect(ri, ci));\r\n      }\r\n    }\r\n    return {\r\n      ri, ci, left, top, width, height,\r\n    };\r\n  }\r\n\r\n  isSignleSelected() {\r\n    const {\r\n      sri, sci, eri, eci,\r\n    } = this.selector.range;\r\n    const cell = this.getCell(sri, sci);\r\n    if (cell && cell.merge) {\r\n      const [rn, cn] = cell.merge;\r\n      if (sri + rn === eri && sci + cn === eci) return true;\r\n    }\r\n    return !this.selector.multiple();\r\n  }\r\n\r\n  canUnmerge() {\r\n    const {\r\n      sri, sci, eri, eci,\r\n    } = this.selector.range;\r\n    const cell = this.getCell(sri, sci);\r\n    if (cell && cell.merge) {\r\n      const [rn, cn] = cell.merge;\r\n      if (sri + rn === eri && sci + cn === eci) return true;\r\n    }\r\n    return false;\r\n  }\r\n\r\n  merge() {\r\n    const { selector, rows } = this;\r\n    if (this.isSignleSelected()) return;\r\n    const [rn, cn] = selector.size();\r\n    // console.log('merge:', rn, cn);\r\n    if (rn > 1 || cn > 1) {\r\n      const { sri, sci } = selector.range;\r\n      this.changeData(() => {\r\n        const cell = rows.getCellOrNew(sri, sci);\r\n        cell.merge = [rn - 1, cn - 1];\r\n        this.merges.add(selector.range);\r\n        // delete merge cells\r\n        this.rows.deleteCells(selector.range);\r\n        // console.log('cell:', cell, this.d);\r\n        this.rows.setCell(sri, sci, cell);\r\n      });\r\n    }\r\n  }\r\n\r\n  unmerge() {\r\n    const { selector } = this;\r\n    if (!this.isSignleSelected()) return;\r\n    const { sri, sci } = selector.range;\r\n    this.changeData(() => {\r\n      this.rows.deleteCell(sri, sci, 'merge');\r\n      this.merges.deleteWithin(selector.range);\r\n    });\r\n  }\r\n\r\n  canAutofilter() {\r\n    return !this.autoFilter.active();\r\n  }\r\n\r\n  autofilter() {\r\n    const { autoFilter, selector } = this;\r\n    this.changeData(() => {\r\n      if (autoFilter.active()) {\r\n        autoFilter.clear();\r\n        this.exceptRowSet = new Set();\r\n        this.sortedRowMap = new Map();\r\n        this.unsortedRowMap = new Map();\r\n      } else {\r\n        autoFilter.ref = selector.range.toString();\r\n      }\r\n    });\r\n  }\r\n\r\n  setAutoFilter(ci, order, operator, value) {\r\n    const { autoFilter } = this;\r\n    autoFilter.addFilter(ci, operator, value);\r\n    autoFilter.setSort(ci, order);\r\n    this.resetAutoFilter();\r\n  }\r\n\r\n  resetAutoFilter() {\r\n    const { autoFilter, rows } = this;\r\n    if (!autoFilter.active()) return;\r\n    const { sort } = autoFilter;\r\n    const { rset, fset } = autoFilter.filteredRows((r, c) => rows.getCell(r, c));\r\n    const fary = Array.from(fset);\r\n    const oldAry = Array.from(fset);\r\n    if (sort) {\r\n      fary.sort((a, b) => {\r\n        if (sort.order === 'asc') return a - b;\r\n        if (sort.order === 'desc') return b - a;\r\n        return 0;\r\n      });\r\n    }\r\n    this.exceptRowSet = rset;\r\n    this.sortedRowMap = new Map();\r\n    this.unsortedRowMap = new Map();\r\n    fary.forEach((it, index) => {\r\n      this.sortedRowMap.set(oldAry[index], it);\r\n      this.unsortedRowMap.set(it, oldAry[index]);\r\n    });\r\n  }\r\n\r\n  deleteCell(what = 'all') {\r\n    const { selector } = this;\r\n    this.changeData(() => {\r\n      this.rows.deleteCells(selector.range, what);\r\n      if (what === 'all' || what === 'format') {\r\n        this.merges.deleteWithin(selector.range);\r\n      }\r\n    });\r\n  }\r\n\r\n  // type: row | column\r\n  insert(type, n = 1) {\r\n    this.changeData(() => {\r\n      const { sri, sci } = this.selector.range;\r\n      const { rows, merges, cols } = this;\r\n      let si = sri;\r\n      if (type === 'row') {\r\n        rows.insert(sri, n);\r\n      } else if (type === 'column') {\r\n        rows.insertColumn(sci, n);\r\n        si = sci;\r\n        cols.len += 1;\r\n      }\r\n      merges.shift(type, si, n, (ri, ci, rn, cn) => {\r\n        const cell = rows.getCell(ri, ci);\r\n        cell.merge[0] += rn;\r\n        cell.merge[1] += cn;\r\n      });\r\n    });\r\n  }\r\n\r\n  // type: row | column\r\n  delete(type) {\r\n    this.changeData(() => {\r\n      const {\r\n        rows, merges, selector, cols,\r\n      } = this;\r\n      const { range } = selector;\r\n      const {\r\n        sri, sci, eri, eci,\r\n      } = selector.range;\r\n      const [rsize, csize] = selector.range.size();\r\n      let si = sri;\r\n      let size = rsize;\r\n      if (type === 'row') {\r\n        rows.delete(sri, eri);\r\n      } else if (type === 'column') {\r\n        rows.deleteColumn(sci, eci);\r\n        si = range.sci;\r\n        size = csize;\r\n        cols.len -= 1;\r\n      }\r\n      // console.log('type:', type, ', si:', si, ', size:', size);\r\n      merges.shift(type, si, -size, (ri, ci, rn, cn) => {\r\n        // console.log('ri:', ri, ', ci:', ci, ', rn:', rn, ', cn:', cn);\r\n        const cell = rows.getCell(ri, ci);\r\n        cell.merge[0] += rn;\r\n        cell.merge[1] += cn;\r\n        if (cell.merge[0] === 0 && cell.merge[1] === 0) {\r\n          delete cell.merge;\r\n        }\r\n      });\r\n    });\r\n  }\r\n\r\n  scrollx(x, cb) {\r\n    const { scroll, freeze, cols } = this;\r\n    const [, fci] = freeze;\r\n    const [\r\n      ci, left, width,\r\n    ] = helper.rangeReduceIf(fci, cols.len, 0, 0, x, i => cols.getWidth(i));\r\n    // console.log('fci:', fci, ', ci:', ci);\r\n    let x1 = left;\r\n    if (x > 0) x1 += width;\r\n    if (scroll.x !== x1) {\r\n      scroll.ci = x > 0 ? ci : 0;\r\n      scroll.x = x1;\r\n      cb();\r\n    }\r\n  }\r\n\r\n  scrolly(y, cb) {\r\n    const { scroll, freeze, rows } = this;\r\n    const [fri] = freeze;\r\n    const [\r\n      ri, top, height,\r\n    ] = helper.rangeReduceIf(fri, rows.len, 0, 0, y, i => rows.getHeight(i));\r\n    let y1 = top;\r\n    if (y > 0) y1 += height;\r\n    // console.log('ri:', ri, ' ,y:', y1);\r\n    if (scroll.y !== y1) {\r\n      scroll.ri = y > 0 ? ri : 0;\r\n      scroll.y = y1;\r\n      cb();\r\n    }\r\n  }\r\n\r\n  cellRect(ri, ci) {\r\n    const { rows, cols } = this;\r\n    const left = cols.sumWidth(0, ci);\r\n    const top = rows.sumHeight(0, ri);\r\n    const cell = rows.getCell(ri, ci);\r\n    let width = cols.getWidth(ci);\r\n    let height = rows.getHeight(ri);\r\n    if (cell !== null) {\r\n      if (cell.merge) {\r\n        const [rn, cn] = cell.merge;\r\n        // console.log('cell.merge:', cell.merge);\r\n        if (rn > 0) {\r\n          for (let i = 1; i <= rn; i += 1) {\r\n            height += rows.getHeight(ri + i);\r\n          }\r\n        }\r\n        if (cn > 0) {\r\n          for (let i = 1; i <= cn; i += 1) {\r\n            width += cols.getWidth(ci + i);\r\n          }\r\n        }\r\n      }\r\n    }\r\n    // console.log('data:', this.d);\r\n    return {\r\n      left, top, width, height, cell,\r\n    };\r\n  }\r\n\r\n  getCell(ri, ci) {\r\n    return this.rows.getCell(ri, ci);\r\n  }\r\n\r\n  getCellTextOrDefault(ri, ci) {\r\n    const cell = this.getCell(ri, ci);\r\n    return (cell && cell.text) ? cell.text : '';\r\n  }\r\n\r\n  getCellStyle(ri, ci) {\r\n    const cell = this.getCell(ri, ci);\r\n    if (cell && cell.style !== undefined) {\r\n      return this.styles[cell.style];\r\n    }\r\n    return null;\r\n  }\r\n\r\n  getCellStyleOrDefault(ri, ci) {\r\n    const { styles, rows } = this;\r\n    const cell = rows.getCell(ri, ci);\r\n    const cellStyle = (cell && cell.style !== undefined) ? styles[cell.style] : {};\r\n    return helper.merge(this.defaultStyle(), cellStyle);\r\n  }\r\n\r\n  getSelectedCellStyle() {\r\n    const { ri, ci } = this.selector;\r\n    return this.getCellStyleOrDefault(ri, ci);\r\n  }\r\n\r\n  // state: input | finished\r\n  setCellText(ri, ci, text, state) {\r\n    const { rows, history, validations } = this;\r\n    if (state === 'finished') {\r\n      rows.setCellText(ri, ci, '');\r\n      history.add(this.getData());\r\n      rows.setCellText(ri, ci, text);\r\n    } else {\r\n      rows.setCellText(ri, ci, text);\r\n      this.change(this.getData());\r\n    }\r\n    // validator\r\n    validations.validate(ri, ci, text);\r\n  }\r\n\r\n  freezeIsActive() {\r\n    const [ri, ci] = this.freeze;\r\n    return ri > 0 || ci > 0;\r\n  }\r\n\r\n  setFreeze(ri, ci) {\r\n    this.changeData(() => {\r\n      this.freeze = [ri, ci];\r\n    });\r\n  }\r\n\r\n  freezeTotalWidth() {\r\n    return this.cols.sumWidth(0, this.freeze[1]);\r\n  }\r\n\r\n  freezeTotalHeight() {\r\n    return this.rows.sumHeight(0, this.freeze[0]);\r\n  }\r\n\r\n  setRowHeight(ri, height) {\r\n    this.changeData(() => {\r\n      this.rows.setHeight(ri, height);\r\n    });\r\n  }\r\n\r\n  setColWidth(ci, width) {\r\n    this.changeData(() => {\r\n      this.cols.setWidth(ci, width);\r\n    });\r\n  }\r\n\r\n  viewHeight() {\r\n    const { view, showToolbar } = this.settings;\r\n    let h = view.height();\r\n    h -= bottombarHeight;\r\n    if (showToolbar) {\r\n      h -= toolbarHeight;\r\n    }\r\n    return h;\r\n  }\r\n\r\n  viewWidth() {\r\n    return this.settings.view.width();\r\n  }\r\n\r\n  freezeViewRange() {\r\n    const [ri, ci] = this.freeze;\r\n    return new CellRange(0, 0, ri - 1, ci - 1, this.freezeTotalWidth(), this.freezeTotalHeight());\r\n  }\r\n\r\n  contentRange() {\r\n    const { rows, cols } = this;\r\n    const [ri, ci] = rows.maxCell();\r\n    const h = rows.sumHeight(0, ri + 1);\r\n    const w = cols.sumWidth(0, ci + 1);\r\n    return new CellRange(0, 0, ri, ci, w, h);\r\n  }\r\n\r\n  exceptRowTotalHeight(sri, eri) {\r\n    const { exceptRowSet, rows } = this;\r\n    const exceptRows = Array.from(exceptRowSet);\r\n    let exceptRowTH = 0;\r\n    exceptRows.forEach((ri) => {\r\n      if (ri < sri || ri > eri) {\r\n        const height = rows.getHeight(ri);\r\n        exceptRowTH += height;\r\n      }\r\n    });\r\n    return exceptRowTH;\r\n  }\r\n\r\n  viewRange() {\r\n    const {\r\n      scroll, rows, cols, freeze, exceptRowSet,\r\n    } = this;\r\n    // console.log('scroll:', scroll, ', freeze:', freeze)\r\n    let { ri, ci } = scroll;\r\n    if (ri <= 0) [ri] = freeze;\r\n    if (ci <= 0) [, ci] = freeze;\r\n\r\n    let [x, y] = [0, 0];\r\n    let [eri, eci] = [rows.len, cols.len];\r\n    for (let i = ri; i < rows.len; i += 1) {\r\n      if (!exceptRowSet.has(i)) {\r\n        y += rows.getHeight(i);\r\n        eri = i;\r\n      }\r\n      if (y > this.viewHeight()) break;\r\n    }\r\n    for (let j = ci; j < cols.len; j += 1) {\r\n      x += cols.getWidth(j);\r\n      eci = j;\r\n      if (x > this.viewWidth()) break;\r\n    }\r\n    // console.log(ri, ci, eri, eci, x, y);\r\n    return new CellRange(ri, ci, eri, eci, x, y);\r\n  }\r\n\r\n  eachMergesInView(viewRange, cb) {\r\n    this.merges.filterIntersects(viewRange)\r\n      .forEach(it => cb(it));\r\n  }\r\n\r\n  hideRowsOrCols() {\r\n    const { rows, cols, selector } = this;\r\n    const [rlen, clen] = selector.size();\r\n    const {\r\n      sri, sci, eri, eci,\r\n    } = selector.range;\r\n    if (rlen === rows.len) {\r\n      for (let ci = sci; ci <= eci; ci += 1) {\r\n        cols.setHide(ci, true);\r\n      }\r\n    } else if (clen === cols.len) {\r\n      for (let ri = sri; ri <= eri; ri += 1) {\r\n        rows.setHide(ri, true);\r\n      }\r\n    }\r\n  }\r\n\r\n  // type: row | col\r\n  // index row-index | col-index\r\n  unhideRowsOrCols(type, index) {\r\n    this[`${type}s`].unhide(index);\r\n  }\r\n\r\n  rowEach(min, max, cb) {\r\n    let y = 0;\r\n    const { rows } = this;\r\n    const frset = this.exceptRowSet;\r\n    const frary = [...frset];\r\n    let offset = 0;\r\n    for (let i = 0; i < frary.length; i += 1) {\r\n      if (frary[i] < min) {\r\n        offset += 1;\r\n      }\r\n    }\r\n    // console.log('min:', min, ', max:', max, ', scroll:', scroll);\r\n    for (let i = min + offset; i <= max + offset; i += 1) {\r\n      if (frset.has(i)) {\r\n        offset += 1;\r\n      } else {\r\n        const rowHeight = rows.getHeight(i);\r\n        if (rowHeight > 0) {\r\n          cb(i, y, rowHeight);\r\n          y += rowHeight;\r\n          if (y > this.viewHeight()) break;\r\n        }\r\n      }\r\n    }\r\n  }\r\n\r\n  colEach(min, max, cb) {\r\n    let x = 0;\r\n    const { cols } = this;\r\n    for (let i = min; i <= max; i += 1) {\r\n      const colWidth = cols.getWidth(i);\r\n      if (colWidth > 0) {\r\n        cb(i, x, colWidth);\r\n        x += colWidth;\r\n        if (x > this.viewWidth()) break;\r\n      }\r\n    }\r\n  }\r\n\r\n  defaultStyle() {\r\n    return this.settings.style;\r\n  }\r\n\r\n  addStyle(nstyle) {\r\n    const { styles } = this;\r\n    // console.log('old.styles:', styles, nstyle);\r\n    for (let i = 0; i < styles.length; i += 1) {\r\n      const style = styles[i];\r\n      if (helper.equals(style, nstyle)) return i;\r\n    }\r\n    styles.push(nstyle);\r\n    return styles.length - 1;\r\n  }\r\n\r\n  changeData(cb) {\r\n    this.history.add(this.getData());\r\n    cb();\r\n    this.change(this.getData());\r\n  }\r\n\r\n  setData(d) {\r\n    Object.keys(d).forEach((property) => {\r\n      if (property === 'merges' || property === 'rows'\r\n        || property === 'cols' || property === 'validations') {\r\n        this[property].setData(d[property]);\r\n      } else if (property === 'freeze') {\r\n        const [x, y] = expr2xy(d[property]);\r\n        this.freeze = [y, x];\r\n      } else if (property === 'autofilter') {\r\n        this.autoFilter.setData(d[property]);\r\n      } else if (d[property] !== undefined) {\r\n        this[property] = d[property];\r\n      }\r\n    });\r\n    return this;\r\n  }\r\n\r\n  getData() {\r\n    const {\r\n      name, freeze, styles, merges, rows, cols, validations, autoFilter,\r\n    } = this;\r\n    return {\r\n      name,\r\n      freeze: xy2expr(freeze[1], freeze[0]),\r\n      styles,\r\n      merges: merges.getData(),\r\n      rows: rows.getData(),\r\n      cols: cols.getData(),\r\n      validations: validations.getData(),\r\n      autofilter: autoFilter.getData(),\r\n    };\r\n  }\r\n}\r\n"]}]}