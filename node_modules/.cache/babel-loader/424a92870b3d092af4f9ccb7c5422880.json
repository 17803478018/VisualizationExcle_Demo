{"remainingRequest":"D:\\代码\\del_demo\\VisualizationExcle_Demo\\node_modules\\babel-loader\\lib\\index.js!D:\\代码\\del_demo\\VisualizationExcle_Demo\\node_modules\\eslint-loader\\index.js??ref--13-0!D:\\代码\\del_demo\\VisualizationExcle_Demo\\src\\components\\x-spreadsheet\\core\\formula.js","dependencies":[{"path":"D:\\代码\\del_demo\\VisualizationExcle_Demo\\src\\components\\x-spreadsheet\\core\\formula.js","mtime":1614915429361},{"path":"D:\\代码\\del_demo\\VisualizationExcle_Demo\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1596536485880},{"path":"D:\\代码\\del_demo\\VisualizationExcle_Demo\\node_modules\\babel-loader\\lib\\index.js","mtime":1606828682259},{"path":"D:\\代码\\del_demo\\VisualizationExcle_Demo\\node_modules\\eslint-loader\\index.js","mtime":1603719226989}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:aW1wb3J0IF9zbGljZWRUb0FycmF5IGZyb20gIkQ6L1x1NEVFM1x1NzgwMS9kZWxfZGVtby9WaXN1YWxpemF0aW9uRXhjbGVfRGVtby9ub2RlX21vZHVsZXMvQGJhYmVsL3J1bnRpbWUvaGVscGVycy9lc20vc2xpY2VkVG9BcnJheSI7CmltcG9ydCBfdG9Db25zdW1hYmxlQXJyYXkgZnJvbSAiRDovXHU0RUUzXHU3ODAxL2RlbF9kZW1vL1Zpc3VhbGl6YXRpb25FeGNsZV9EZW1vL25vZGVfbW9kdWxlcy9AYmFiZWwvcnVudGltZS9oZWxwZXJzL2VzbS90b0NvbnN1bWFibGVBcnJheSI7CmltcG9ydCAiY29yZS1qcy9tb2R1bGVzL2VzLmFycmF5LnJlZHVjZS5qcyI7CmltcG9ydCAiY29yZS1qcy9tb2R1bGVzL2VzLm51bWJlci5jb25zdHJ1Y3Rvci5qcyI7CmltcG9ydCAiY29yZS1qcy9tb2R1bGVzL2VzLmFycmF5Lm1hcC5qcyI7CmltcG9ydCAiY29yZS1qcy9tb2R1bGVzL2VzLmFycmF5LmpvaW4uanMiOwppbXBvcnQgImNvcmUtanMvbW9kdWxlcy93ZWIuZG9tLWNvbGxlY3Rpb25zLmZvci1lYWNoLmpzIjsKCi8qKg0KICBmb3JtdWxhOg0KICAgIGtleQ0KICAgIHRpdGxlDQogICAgcmVuZGVyDQoqLwoKLyoqDQogKiBAdHlwZWRlZiB7b2JqZWN0fSBGb3JtdWxhDQogKiBAcHJvcGVydHkge3N0cmluZ30ga2V5DQogKiBAcHJvcGVydHkge2Z1bmN0aW9ufSB0aXRsZQ0KICogQHByb3BlcnR5IHtmdW5jdGlvbn0gcmVuZGVyDQogKi8KaW1wb3J0IHsgdGYgfSBmcm9tICcuLi9sb2NhbGUvbG9jYWxlJzsKaW1wb3J0IHsgbnVtYmVyQ2FsYyB9IGZyb20gJy4vaGVscGVyJzsKLyoqIEB0eXBlIHtGb3JtdWxhW119ICovCgp2YXIgYmFzZUZvcm11bGFzID0gW3sKICBrZXk6ICdTVU0nLAogIHRpdGxlOiB0ZignZm9ybXVsYS5zdW0nKSwKICByZW5kZXI6IGZ1bmN0aW9uIHJlbmRlcihhcnkpIHsKICAgIHJldHVybiBhcnkucmVkdWNlKGZ1bmN0aW9uIChhLCBiKSB7CiAgICAgIHJldHVybiBudW1iZXJDYWxjKCcrJywgYSwgYik7CiAgICB9LCAwKTsKICB9Cn0sIHsKICBrZXk6ICdBVkVSQUdFJywKICB0aXRsZTogdGYoJ2Zvcm11bGEuYXZlcmFnZScpLAogIHJlbmRlcjogZnVuY3Rpb24gcmVuZGVyKGFyeSkgewogICAgcmV0dXJuIGFyeS5yZWR1Y2UoZnVuY3Rpb24gKGEsIGIpIHsKICAgICAgcmV0dXJuIE51bWJlcihhKSArIE51bWJlcihiKTsKICAgIH0sIDApIC8gYXJ5Lmxlbmd0aDsKICB9Cn0sIHsKICBrZXk6ICdNQVgnLAogIHRpdGxlOiB0ZignZm9ybXVsYS5tYXgnKSwKICByZW5kZXI6IGZ1bmN0aW9uIHJlbmRlcihhcnkpIHsKICAgIHJldHVybiBNYXRoLm1heC5hcHBseShNYXRoLCBfdG9Db25zdW1hYmxlQXJyYXkoYXJ5Lm1hcChmdW5jdGlvbiAodikgewogICAgICByZXR1cm4gTnVtYmVyKHYpOwogICAgfSkpKTsKICB9Cn0sIHsKICBrZXk6ICdNSU4nLAogIHRpdGxlOiB0ZignZm9ybXVsYS5taW4nKSwKICByZW5kZXI6IGZ1bmN0aW9uIHJlbmRlcihhcnkpIHsKICAgIHJldHVybiBNYXRoLm1pbi5hcHBseShNYXRoLCBfdG9Db25zdW1hYmxlQXJyYXkoYXJ5Lm1hcChmdW5jdGlvbiAodikgewogICAgICByZXR1cm4gTnVtYmVyKHYpOwogICAgfSkpKTsKICB9Cn0sIHsKICBrZXk6ICdJRicsCiAgdGl0bGU6IHRmKCdmb3JtdWxhLl9pZicpLAogIHJlbmRlcjogZnVuY3Rpb24gcmVuZGVyKF9yZWYpIHsKICAgIHZhciBfcmVmMiA9IF9zbGljZWRUb0FycmF5KF9yZWYsIDMpLAogICAgICAgIGIgPSBfcmVmMlswXSwKICAgICAgICB0ID0gX3JlZjJbMV0sCiAgICAgICAgZiA9IF9yZWYyWzJdOwoKICAgIHJldHVybiBiID8gdCA6IGY7CiAgfQp9LCB7CiAga2V5OiAnQU5EJywKICB0aXRsZTogdGYoJ2Zvcm11bGEuYW5kJyksCiAgcmVuZGVyOiBmdW5jdGlvbiByZW5kZXIoYXJ5KSB7CiAgICByZXR1cm4gYXJ5LmV2ZXJ5KGZ1bmN0aW9uIChpdCkgewogICAgICByZXR1cm4gaXQ7CiAgICB9KTsKICB9Cn0sIHsKICBrZXk6ICdPUicsCiAgdGl0bGU6IHRmKCdmb3JtdWxhLm9yJyksCiAgcmVuZGVyOiBmdW5jdGlvbiByZW5kZXIoYXJ5KSB7CiAgICByZXR1cm4gYXJ5LnNvbWUoZnVuY3Rpb24gKGl0KSB7CiAgICAgIHJldHVybiBpdDsKICAgIH0pOwogIH0KfSwgewogIGtleTogJ0NPTkNBVCcsCiAgdGl0bGU6IHRmKCdmb3JtdWxhLmNvbmNhdCcpLAogIHJlbmRlcjogZnVuY3Rpb24gcmVuZGVyKGFyeSkgewogICAgcmV0dXJuIGFyeS5qb2luKCcnKTsKICB9Cn0KLyogc3VwcG9ydDogIDEgKyBBMSArIEIyICogMw0Kew0KICBrZXk6ICdESVZJREUnLA0KICB0aXRsZTogdGYoJ2Zvcm11bGEuZGl2aWRlJyksDQogIHJlbmRlcjogYXJ5ID0+IGFyeS5yZWR1Y2UoKGEsIGIpID0+IE51bWJlcihhKSAvIE51bWJlcihiKSksDQp9LA0Kew0KICBrZXk6ICdQUk9EVUNUJywNCiAgdGl0bGU6IHRmKCdmb3JtdWxhLnByb2R1Y3QnKSwNCiAgcmVuZGVyOiBhcnkgPT4gYXJ5LnJlZHVjZSgoYSwgYikgPT4gTnVtYmVyKGEpICogTnVtYmVyKGIpLDEpLA0KfSwNCnsNCiAga2V5OiAnU1VCVFJBQ1QnLA0KICB0aXRsZTogdGYoJ2Zvcm11bGEuc3VidHJhY3QnKSwNCiAgcmVuZGVyOiBhcnkgPT4gYXJ5LnJlZHVjZSgoYSwgYikgPT4gTnVtYmVyKGEpIC0gTnVtYmVyKGIpKSwNCn0sDQoqLwpdOwp2YXIgZm9ybXVsYXMgPSBiYXNlRm9ybXVsYXM7IC8vIGNvbnN0IGZvcm11bGFzID0gKGZvcm11bGFBcnkgPSBbXSkgPT4gewovLyAgIGNvbnN0IGZvcm11bGFNYXAgPSB7fTsKLy8gICBiYXNlRm9ybXVsYXMuY29uY2F0KGZvcm11bGFBcnkpLmZvckVhY2goKGYpID0+IHsKLy8gICAgIGZvcm11bGFNYXBbZi5rZXldID0gZjsKLy8gICB9KTsKLy8gICByZXR1cm4gZm9ybXVsYU1hcDsKLy8gfTsKCnZhciBmb3JtdWxhbSA9IHt9OwpiYXNlRm9ybXVsYXMuZm9yRWFjaChmdW5jdGlvbiAoZikgewogIGZvcm11bGFtW2Yua2V5XSA9IGY7Cn0pOwpleHBvcnQgZGVmYXVsdCB7fTsKZXhwb3J0IHsgZm9ybXVsYW0sIGZvcm11bGFzLCBiYXNlRm9ybXVsYXMgfTs="},{"version":3,"sources":["D:/代码/del_demo/VisualizationExcle_Demo/src/components/x-spreadsheet/core/formula.js"],"names":["tf","numberCalc","baseFormulas","key","title","render","ary","reduce","a","b","Number","length","Math","max","map","v","min","t","f","every","it","some","join","formulas","formulam","forEach"],"mappings":"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","sourcesContent":["/**\r\n  formula:\r\n    key\r\n    title\r\n    render\r\n*/\r\n/**\r\n * @typedef {object} Formula\r\n * @property {string} key\r\n * @property {function} title\r\n * @property {function} render\r\n */\r\nimport { tf } from '../locale/locale';\r\nimport { numberCalc } from './helper';\r\n\r\n/** @type {Formula[]} */\r\nconst baseFormulas = [\r\n  {\r\n    key: 'SUM',\r\n    title: tf('formula.sum'),\r\n    render: ary => ary.reduce((a, b) => numberCalc('+', a, b), 0),\r\n  },\r\n  {\r\n    key: 'AVERAGE',\r\n    title: tf('formula.average'),\r\n    render: ary => ary.reduce((a, b) => Number(a) + Number(b), 0) / ary.length,\r\n  },\r\n  {\r\n    key: 'MAX',\r\n    title: tf('formula.max'),\r\n    render: ary => Math.max(...ary.map(v => Number(v))),\r\n  },\r\n  {\r\n    key: 'MIN',\r\n    title: tf('formula.min'),\r\n    render: ary => Math.min(...ary.map(v => Number(v))),\r\n  },\r\n  {\r\n    key: 'IF',\r\n    title: tf('formula._if'),\r\n    render: ([b, t, f]) => (b ? t : f),\r\n  },\r\n  {\r\n    key: 'AND',\r\n    title: tf('formula.and'),\r\n    render: ary => ary.every(it => it),\r\n  },\r\n  {\r\n    key: 'OR',\r\n    title: tf('formula.or'),\r\n    render: ary => ary.some(it => it),\r\n  },\r\n  {\r\n    key: 'CONCAT',\r\n    title: tf('formula.concat'),\r\n    render: ary => ary.join(''),\r\n  },\r\n  /* support:  1 + A1 + B2 * 3\r\n  {\r\n    key: 'DIVIDE',\r\n    title: tf('formula.divide'),\r\n    render: ary => ary.reduce((a, b) => Number(a) / Number(b)),\r\n  },\r\n  {\r\n    key: 'PRODUCT',\r\n    title: tf('formula.product'),\r\n    render: ary => ary.reduce((a, b) => Number(a) * Number(b),1),\r\n  },\r\n  {\r\n    key: 'SUBTRACT',\r\n    title: tf('formula.subtract'),\r\n    render: ary => ary.reduce((a, b) => Number(a) - Number(b)),\r\n  },\r\n  */\r\n];\r\n\r\nconst formulas = baseFormulas;\r\n\r\n// const formulas = (formulaAry = []) => {\r\n//   const formulaMap = {};\r\n//   baseFormulas.concat(formulaAry).forEach((f) => {\r\n//     formulaMap[f.key] = f;\r\n//   });\r\n//   return formulaMap;\r\n// };\r\nconst formulam = {};\r\nbaseFormulas.forEach((f) => {\r\n  formulam[f.key] = f;\r\n});\r\n\r\nexport default {\r\n};\r\n\r\nexport {\r\n  formulam,\r\n  formulas,\r\n  baseFormulas,\r\n};\r\n"]}]}