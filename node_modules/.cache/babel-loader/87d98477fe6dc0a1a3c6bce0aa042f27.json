{"remainingRequest":"D:\\代码\\del_demo\\VisualizationExcle_Demo\\node_modules\\babel-loader\\lib\\index.js!D:\\代码\\del_demo\\VisualizationExcle_Demo\\node_modules\\eslint-loader\\index.js??ref--13-0!D:\\代码\\del_demo\\VisualizationExcle_Demo\\src\\components\\x-spreadsheet\\locale\\locale.js","dependencies":[{"path":"D:\\代码\\del_demo\\VisualizationExcle_Demo\\src\\components\\x-spreadsheet\\locale\\locale.js","mtime":1614915429366},{"path":"D:\\代码\\del_demo\\VisualizationExcle_Demo\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1596536485880},{"path":"D:\\代码\\del_demo\\VisualizationExcle_Demo\\node_modules\\babel-loader\\lib\\index.js","mtime":1606828682259},{"path":"D:\\代码\\del_demo\\VisualizationExcle_Demo\\node_modules\\eslint-loader\\index.js","mtime":1603719226989}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:aW1wb3J0IF9jcmVhdGVGb3JPZkl0ZXJhdG9ySGVscGVyIGZyb20gIkQ6L1x1NEVFM1x1NzgwMS9kZWxfZGVtby9WaXN1YWxpemF0aW9uRXhjbGVfRGVtby9ub2RlX21vZHVsZXMvQGJhYmVsL3J1bnRpbWUvaGVscGVycy9lc20vY3JlYXRlRm9yT2ZJdGVyYXRvckhlbHBlciI7CmltcG9ydCAiY29yZS1qcy9tb2R1bGVzL2VzLnN0cmluZy5tYXRjaC5qcyI7CmltcG9ydCAiY29yZS1qcy9tb2R1bGVzL2VzLnJlZ2V4cC5leGVjLmpzIjsKCi8qIGdsb2JhbCB3aW5kb3cgKi8KaW1wb3J0IGVuIGZyb20gJy4vZW4nOyAvLyBEZWZpbmVzIHRoZSBmYWxsYmFjayBsYW5ndWFnZSBhcyBFbmdsaXNoCgp2YXIgJGxhbmd1YWdlcyA9IFsnZW4nXTsKdmFyICRtZXNzYWdlcyA9IHsKICBlbjogZW4KfTsKCmZ1bmN0aW9uIHRyYW5zbGF0ZShrZXksIG1lc3NhZ2VzKSB7CiAgaWYgKG1lc3NhZ2VzKSB7CiAgICAvLyBSZXR1cm4gdGhlIHRyYW5zbGF0aW9uIGZyb20gdGhlIGZpcnN0IGxhbmd1YWdlIGluIHRoZSBsYW5ndWFnZXMgYXJyYXkKICAgIC8vIHRoYXQgaGFzIGEgdmFsdWUgZm9yIHRoZSBwcm92aWRlZCBrZXkuCiAgICB2YXIgX2l0ZXJhdG9yID0gX2NyZWF0ZUZvck9mSXRlcmF0b3JIZWxwZXIoJGxhbmd1YWdlcyksCiAgICAgICAgX3N0ZXA7CgogICAgdHJ5IHsKICAgICAgZm9yIChfaXRlcmF0b3IucygpOyAhKF9zdGVwID0gX2l0ZXJhdG9yLm4oKSkuZG9uZTspIHsKICAgICAgICB2YXIgbGFuZyA9IF9zdGVwLnZhbHVlOwogICAgICAgIGlmICghbWVzc2FnZXNbbGFuZ10pIGJyZWFrOwogICAgICAgIHZhciBtZXNzYWdlID0gbWVzc2FnZXNbbGFuZ107IC8vIFNwbGl0cyB0aGUga2V5IGF0ICcuJyBleGNlcHQgd2hlcmUgZXNjYXBlZCBhcyAnXC4nCgogICAgICAgIHZhciBrZXlzID0ga2V5Lm1hdGNoKC8oPzpcXC58W14uXSkrL2cpOwoKICAgICAgICBmb3IgKHZhciBpID0gMDsgaSA8IGtleXMubGVuZ3RoOyBpICs9IDEpIHsKICAgICAgICAgIHZhciBwcm9wZXJ0eSA9IGtleXNbaV07CiAgICAgICAgICB2YXIgdmFsdWUgPSBtZXNzYWdlW3Byb3BlcnR5XTsgLy8gSWYgdmFsdWUgZG9lc24ndCBleGlzdCwgdHJ5IG5leHQgbGFuZ3VhZ2UKCiAgICAgICAgICBpZiAoIXZhbHVlKSBicmVhazsKICAgICAgICAgIGlmIChpID09PSBrZXlzLmxlbmd0aCAtIDEpIHJldHVybiB2YWx1ZTsgLy8gTW92ZSBkb3duIHRvIHRoZSBuZXh0IGxldmVsIG9mIHRoZSBtZXNzYWdlcyBvYmplY3QKCiAgICAgICAgICBtZXNzYWdlID0gdmFsdWU7CiAgICAgICAgfQogICAgICB9CiAgICB9IGNhdGNoIChlcnIpIHsKICAgICAgX2l0ZXJhdG9yLmUoZXJyKTsKICAgIH0gZmluYWxseSB7CiAgICAgIF9pdGVyYXRvci5mKCk7CiAgICB9CiAgfQoKICByZXR1cm4gdW5kZWZpbmVkOwp9CgpmdW5jdGlvbiB0KGtleSkgewogIHZhciB2ID0gdHJhbnNsYXRlKGtleSwgJG1lc3NhZ2VzKTsKCiAgaWYgKCF2ICYmIHdpbmRvdyAmJiB3aW5kb3cueF9zcHJlYWRzaGVldCAmJiB3aW5kb3cueF9zcHJlYWRzaGVldC4kbWVzc2FnZXMpIHsKICAgIHYgPSB0cmFuc2xhdGUoa2V5LCB3aW5kb3cueF9zcHJlYWRzaGVldC4kbWVzc2FnZXMpOwogIH0KCiAgcmV0dXJuIHYgfHwgJyc7Cn0KCmZ1bmN0aW9uIHRmKGtleSkgewogIHJldHVybiBmdW5jdGlvbiAoKSB7CiAgICByZXR1cm4gdChrZXkpOwogIH07Cn0gLy8gSWYgY2xlYXJMYW5nTGlzdCBpcyBzZXQgdG8gZmFsc2UsIGxhbmcgd2lsbCBiZSBhZGRlZCB0byB0aGUgZnJvbnQgb2YgdGhlCi8vIGxhbmd1YWdlcyBhcnJheS4gVGhlIGxhbmd1YWdlcyBpbiB0aGUgbGFuZ3VhZ2UgYXJyYXkgYXJlIHNlYXJjaGVkIGluIG9yZGVyCi8vIHRvIGZpbmQgYSB0cmFuc2xhdGlvbi4gVGhpcyBhbGxvd3MgdGhlIHVzZSBvZiBvdGhlciBsYW5ndWFnZXMgYXMgYSBmYWxsYmFjawovLyBpZiBsYW5nIGlzIG1pc3Npbmcgc29tZSBrZXlzLiBUaGUgbGFuZ3VhZ2UgYXJyYXkgaXMgcHJlbG9hZGVkIHdpdGggRW5nbGlzaC4KLy8gVG8gc2V0IHRoZSBsYW5ndWFnZXMgYXJyYXkgdG8gb25seSBpbmNsdWRlIGxhbmcsIHNldCBjbGVhckxhbmdMaXN0IHRvIHRydWUuCgoKZnVuY3Rpb24gbG9jYWxlKGxhbmcsIG1lc3NhZ2UpIHsKICB2YXIgY2xlYXJMYW5nTGlzdCA9IGFyZ3VtZW50cy5sZW5ndGggPiAyICYmIGFyZ3VtZW50c1syXSAhPT0gdW5kZWZpbmVkID8gYXJndW1lbnRzWzJdIDogZmFsc2U7CgogIGlmIChjbGVhckxhbmdMaXN0KSB7CiAgICAkbGFuZ3VhZ2VzID0gW2xhbmddOwogIH0gZWxzZSB7CiAgICAvLyBBcHBlbmQgdG8gZnJvbnQgb2YgYXJyYXkuCiAgICAvLyBUcmFuc2xhdGlvbiBtZXRob2Qgd2lsbCB1c2UgdGhlIGZpcnN0IGxhbmd1YWdlIGluIHRoZSBsaXN0IHRoYXQgaGFzIGEKICAgIC8vIG1hdGNoaW5nIGtleS4KICAgICRsYW5ndWFnZXMudW5zaGlmdChsYW5nKTsKICB9CgogIGlmIChtZXNzYWdlKSB7CiAgICAkbWVzc2FnZXNbbGFuZ10gPSBtZXNzYWdlOwogIH0KfQoKZXhwb3J0IGRlZmF1bHQgewogIHQ6IHQKfTsKZXhwb3J0IHsgbG9jYWxlLCB0LCB0ZiB9Ow=="},{"version":3,"sources":["D:/代码/del_demo/VisualizationExcle_Demo/src/components/x-spreadsheet/locale/locale.js"],"names":["en","$languages","$messages","translate","key","messages","lang","message","keys","match","i","length","property","value","undefined","t","v","window","x_spreadsheet","tf","locale","clearLangList","unshift"],"mappings":";;;;AAAA;AACA,OAAOA,EAAP,MAAe,MAAf,C,CAEA;;AACA,IAAIC,UAAU,GAAG,CAAC,IAAD,CAAjB;AACA,IAAMC,SAAS,GAAG;AAChBF,EAAAA,EAAE,EAAFA;AADgB,CAAlB;;AAIA,SAASG,SAAT,CAAmBC,GAAnB,EAAwBC,QAAxB,EAAkC;AAChC,MAAIA,QAAJ,EAAc;AACZ;AACA;AAFY,+CAGOJ,UAHP;AAAA;;AAAA;AAGZ,0DAA+B;AAAA,YAApBK,IAAoB;AAC7B,YAAI,CAACD,QAAQ,CAACC,IAAD,CAAb,EAAqB;AAErB,YAAIC,OAAO,GAAGF,QAAQ,CAACC,IAAD,CAAtB,CAH6B,CAK7B;;AACA,YAAME,IAAI,GAAGJ,GAAG,CAACK,KAAJ,CAAU,gBAAV,CAAb;;AAEA,aAAK,IAAIC,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGF,IAAI,CAACG,MAAzB,EAAiCD,CAAC,IAAI,CAAtC,EAAyC;AACvC,cAAME,QAAQ,GAAGJ,IAAI,CAACE,CAAD,CAArB;AACA,cAAMG,KAAK,GAAGN,OAAO,CAACK,QAAD,CAArB,CAFuC,CAIvC;;AACA,cAAI,CAACC,KAAL,EAAY;AAEZ,cAAIH,CAAC,KAAKF,IAAI,CAACG,MAAL,GAAc,CAAxB,EAA2B,OAAOE,KAAP,CAPY,CASvC;;AACAN,UAAAA,OAAO,GAAGM,KAAV;AACD;AACF;AAvBW;AAAA;AAAA;AAAA;AAAA;AAwBb;;AAED,SAAOC,SAAP;AACD;;AAED,SAASC,CAAT,CAAWX,GAAX,EAAgB;AACd,MAAIY,CAAC,GAAGb,SAAS,CAACC,GAAD,EAAMF,SAAN,CAAjB;;AACA,MAAI,CAACc,CAAD,IAAMC,MAAN,IAAgBA,MAAM,CAACC,aAAvB,IAAwCD,MAAM,CAACC,aAAP,CAAqBhB,SAAjE,EAA4E;AAC1Ec,IAAAA,CAAC,GAAGb,SAAS,CAACC,GAAD,EAAMa,MAAM,CAACC,aAAP,CAAqBhB,SAA3B,CAAb;AACD;;AACD,SAAOc,CAAC,IAAI,EAAZ;AACD;;AAED,SAASG,EAAT,CAAYf,GAAZ,EAAiB;AACf,SAAO;AAAA,WAAMW,CAAC,CAACX,GAAD,CAAP;AAAA,GAAP;AACD,C,CAED;AACA;AACA;AACA;AACA;;;AACA,SAASgB,MAAT,CAAgBd,IAAhB,EAAsBC,OAAtB,EAAoD;AAAA,MAArBc,aAAqB,uEAAP,KAAO;;AAClD,MAAIA,aAAJ,EAAmB;AACjBpB,IAAAA,UAAU,GAAG,CAACK,IAAD,CAAb;AACD,GAFD,MAEO;AACL;AACA;AACA;AACAL,IAAAA,UAAU,CAACqB,OAAX,CAAmBhB,IAAnB;AACD;;AAED,MAAIC,OAAJ,EAAa;AACXL,IAAAA,SAAS,CAACI,IAAD,CAAT,GAAkBC,OAAlB;AACD;AACF;;AAED,eAAe;AACbQ,EAAAA,CAAC,EAADA;AADa,CAAf;AAIA,SACEK,MADF,EAEEL,CAFF,EAGEI,EAHF","sourcesContent":["/* global window */\r\nimport en from './en';\r\n\r\n// Defines the fallback language as English\r\nlet $languages = ['en'];\r\nconst $messages = {\r\n  en,\r\n};\r\n\r\nfunction translate(key, messages) {\r\n  if (messages) {\r\n    // Return the translation from the first language in the languages array\r\n    // that has a value for the provided key.\r\n    for (const lang of $languages) {\r\n      if (!messages[lang]) break;\r\n\r\n      let message = messages[lang];\r\n\r\n      // Splits the key at '.' except where escaped as '\\.'\r\n      const keys = key.match(/(?:\\\\.|[^.])+/g);\r\n\r\n      for (let i = 0; i < keys.length; i += 1) {\r\n        const property = keys[i];\r\n        const value = message[property];\r\n\r\n        // If value doesn't exist, try next language\r\n        if (!value) break;\r\n\r\n        if (i === keys.length - 1) return value;\r\n\r\n        // Move down to the next level of the messages object\r\n        message = value;\r\n      }\r\n    }\r\n  }\r\n\r\n  return undefined;\r\n}\r\n\r\nfunction t(key) {\r\n  let v = translate(key, $messages);\r\n  if (!v && window && window.x_spreadsheet && window.x_spreadsheet.$messages) {\r\n    v = translate(key, window.x_spreadsheet.$messages);\r\n  }\r\n  return v || '';\r\n}\r\n\r\nfunction tf(key) {\r\n  return () => t(key);\r\n}\r\n\r\n// If clearLangList is set to false, lang will be added to the front of the\r\n// languages array. The languages in the language array are searched in order\r\n// to find a translation. This allows the use of other languages as a fallback\r\n// if lang is missing some keys. The language array is preloaded with English.\r\n// To set the languages array to only include lang, set clearLangList to true.\r\nfunction locale(lang, message, clearLangList=false) {\r\n  if (clearLangList) {\r\n    $languages = [lang];\r\n  } else {\r\n    // Append to front of array.\r\n    // Translation method will use the first language in the list that has a\r\n    // matching key.\r\n    $languages.unshift(lang);\r\n  }\r\n\r\n  if (message) {\r\n    $messages[lang] = message;\r\n  }\r\n}\r\n\r\nexport default {\r\n  t,\r\n};\r\n\r\nexport {\r\n  locale,\r\n  t,\r\n  tf,\r\n};\r\n"]}]}