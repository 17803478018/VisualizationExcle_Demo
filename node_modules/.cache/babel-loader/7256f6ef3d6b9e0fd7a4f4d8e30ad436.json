{"remainingRequest":"D:\\代码\\del_demo\\VisualizationExcle_Demo\\node_modules\\babel-loader\\lib\\index.js!D:\\代码\\del_demo\\VisualizationExcle_Demo\\node_modules\\eslint-loader\\index.js??ref--13-0!D:\\代码\\del_demo\\VisualizationExcle_Demo\\src\\components\\x-spreadsheet\\core\\format.js","dependencies":[{"path":"D:\\代码\\del_demo\\VisualizationExcle_Demo\\src\\components\\x-spreadsheet\\core\\format.js","mtime":1614915429360},{"path":"D:\\代码\\del_demo\\VisualizationExcle_Demo\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1596536485880},{"path":"D:\\代码\\del_demo\\VisualizationExcle_Demo\\node_modules\\babel-loader\\lib\\index.js","mtime":1606828682259},{"path":"D:\\代码\\del_demo\\VisualizationExcle_Demo\\node_modules\\eslint-loader\\index.js","mtime":1603719226989}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:aW1wb3J0IF90b0NvbnN1bWFibGVBcnJheSBmcm9tICJEOi9cdTRFRTNcdTc4MDEvZGVsX2RlbW8vVmlzdWFsaXphdGlvbkV4Y2xlX0RlbW8vbm9kZV9tb2R1bGVzL0BiYWJlbC9ydW50aW1lL2hlbHBlcnMvZXNtL3RvQ29uc3VtYWJsZUFycmF5IjsKaW1wb3J0IF90b0FycmF5IGZyb20gIkQ6L1x1NEVFM1x1NzgwMS9kZWxfZGVtby9WaXN1YWxpemF0aW9uRXhjbGVfRGVtby9ub2RlX21vZHVsZXMvQGJhYmVsL3J1bnRpbWUvaGVscGVycy9lc20vdG9BcnJheSI7CmltcG9ydCAiY29yZS1qcy9tb2R1bGVzL2VzLm9iamVjdC50by1zdHJpbmcuanMiOwppbXBvcnQgImNvcmUtanMvbW9kdWxlcy9lcy5yZWdleHAudG8tc3RyaW5nLmpzIjsKaW1wb3J0ICJjb3JlLWpzL21vZHVsZXMvZXMubnVtYmVyLnRvLWZpeGVkLmpzIjsKaW1wb3J0ICJjb3JlLWpzL21vZHVsZXMvZXMubnVtYmVyLmNvbnN0cnVjdG9yLmpzIjsKaW1wb3J0ICJjb3JlLWpzL21vZHVsZXMvZXMuc3RyaW5nLnNwbGl0LmpzIjsKaW1wb3J0ICJjb3JlLWpzL21vZHVsZXMvZXMucmVnZXhwLmV4ZWMuanMiOwppbXBvcnQgImNvcmUtanMvbW9kdWxlcy9lcy5hcnJheS5zbGljZS5qcyI7CmltcG9ydCAiY29yZS1qcy9tb2R1bGVzL2VzLmFycmF5LmNvbmNhdC5qcyI7CmltcG9ydCAiY29yZS1qcy9tb2R1bGVzL2VzLnN0cmluZy5yZXBsYWNlLmpzIjsKaW1wb3J0ICJjb3JlLWpzL21vZHVsZXMvd2ViLmRvbS1jb2xsZWN0aW9ucy5mb3ItZWFjaC5qcyI7CmltcG9ydCB7IHRmIH0gZnJvbSAnLi4vbG9jYWxlL2xvY2FsZSc7Cgp2YXIgZm9ybWF0U3RyaW5nUmVuZGVyID0gZnVuY3Rpb24gZm9ybWF0U3RyaW5nUmVuZGVyKHYpIHsKICByZXR1cm4gdjsKfTsKCnZhciBmb3JtYXROdW1iZXJSZW5kZXIgPSBmdW5jdGlvbiBmb3JtYXROdW1iZXJSZW5kZXIodikgewogIC8vIG1hdGNoICItMTIuMSIgb3IgIjEyIiBvciAiMTIuMSIKICBpZiAoL14oLT9cZCouP1xkKikkLy50ZXN0KHYpKSB7CiAgICB2YXIgdjEgPSBOdW1iZXIodikudG9GaXhlZCgyKS50b1N0cmluZygpOwoKICAgIHZhciBfdjEkc3BsaXQgPSB2MS5zcGxpdCgnXFwuJyksCiAgICAgICAgX3YxJHNwbGl0MiA9IF90b0FycmF5KF92MSRzcGxpdCksCiAgICAgICAgZmlyc3QgPSBfdjEkc3BsaXQyWzBdLAogICAgICAgIHBhcnRzID0gX3YxJHNwbGl0Mi5zbGljZSgxKTsKCiAgICByZXR1cm4gW2ZpcnN0LnJlcGxhY2UoLyhcZCkoPz0oXGR7M30pKyg/IVxkKSkvZywgJyQxLCcpXS5jb25jYXQoX3RvQ29uc3VtYWJsZUFycmF5KHBhcnRzKSk7CiAgfQoKICByZXR1cm4gdjsKfTsKCnZhciBiYXNlRm9ybWF0cyA9IFt7CiAga2V5OiAnbm9ybWFsJywKICB0aXRsZTogdGYoJ2Zvcm1hdC5ub3JtYWwnKSwKICB0eXBlOiAnc3RyaW5nJywKICByZW5kZXI6IGZvcm1hdFN0cmluZ1JlbmRlcgp9LCB7CiAga2V5OiAndGV4dCcsCiAgdGl0bGU6IHRmKCdmb3JtYXQudGV4dCcpLAogIHR5cGU6ICdzdHJpbmcnLAogIHJlbmRlcjogZm9ybWF0U3RyaW5nUmVuZGVyCn0sIHsKICBrZXk6ICdudW1iZXInLAogIHRpdGxlOiB0ZignZm9ybWF0Lm51bWJlcicpLAogIHR5cGU6ICdudW1iZXInLAogIGxhYmVsOiAnMSwwMDAuMTInLAogIHJlbmRlcjogZm9ybWF0TnVtYmVyUmVuZGVyCn0sIHsKICBrZXk6ICdwZXJjZW50JywKICB0aXRsZTogdGYoJ2Zvcm1hdC5wZXJjZW50JyksCiAgdHlwZTogJ251bWJlcicsCiAgbGFiZWw6ICcxMC4xMiUnLAogIHJlbmRlcjogZnVuY3Rpb24gcmVuZGVyKHYpIHsKICAgIHJldHVybiAiIi5jb25jYXQodiwgIiUiKTsKICB9Cn0sIHsKICBrZXk6ICdybWInLAogIHRpdGxlOiB0ZignZm9ybWF0LnJtYicpLAogIHR5cGU6ICdudW1iZXInLAogIGxhYmVsOiAn77+lMTAuMDAnLAogIHJlbmRlcjogZnVuY3Rpb24gcmVuZGVyKHYpIHsKICAgIHJldHVybiAiXHVGRkU1Ii5jb25jYXQoZm9ybWF0TnVtYmVyUmVuZGVyKHYpKTsKICB9Cn0sIHsKICBrZXk6ICd1c2QnLAogIHRpdGxlOiB0ZignZm9ybWF0LnVzZCcpLAogIHR5cGU6ICdudW1iZXInLAogIGxhYmVsOiAnJDEwLjAwJywKICByZW5kZXI6IGZ1bmN0aW9uIHJlbmRlcih2KSB7CiAgICByZXR1cm4gIiQiLmNvbmNhdChmb3JtYXROdW1iZXJSZW5kZXIodikpOwogIH0KfSwgewogIGtleTogJ2V1cicsCiAgdGl0bGU6IHRmKCdmb3JtYXQuZXVyJyksCiAgdHlwZTogJ251bWJlcicsCiAgbGFiZWw6ICfigqwxMC4wMCcsCiAgcmVuZGVyOiBmdW5jdGlvbiByZW5kZXIodikgewogICAgcmV0dXJuICJcdTIwQUMiLmNvbmNhdChmb3JtYXROdW1iZXJSZW5kZXIodikpOwogIH0KfSwgewogIGtleTogJ2RhdGUnLAogIHRpdGxlOiB0ZignZm9ybWF0LmRhdGUnKSwKICB0eXBlOiAnZGF0ZScsCiAgbGFiZWw6ICcyNi8wOS8yMDA4JywKICByZW5kZXI6IGZvcm1hdFN0cmluZ1JlbmRlcgp9LCB7CiAga2V5OiAndGltZScsCiAgdGl0bGU6IHRmKCdmb3JtYXQudGltZScpLAogIHR5cGU6ICdkYXRlJywKICBsYWJlbDogJzE1OjU5OjAwJywKICByZW5kZXI6IGZvcm1hdFN0cmluZ1JlbmRlcgp9LCB7CiAga2V5OiAnZGF0ZXRpbWUnLAogIHRpdGxlOiB0ZignZm9ybWF0LmRhdGV0aW1lJyksCiAgdHlwZTogJ2RhdGUnLAogIGxhYmVsOiAnMjYvMDkvMjAwOCAxNTo1OTowMCcsCiAgcmVuZGVyOiBmb3JtYXRTdHJpbmdSZW5kZXIKfSwgewogIGtleTogJ2R1cmF0aW9uJywKICB0aXRsZTogdGYoJ2Zvcm1hdC5kdXJhdGlvbicpLAogIHR5cGU6ICdkYXRlJywKICBsYWJlbDogJzI0OjAxOjAwJywKICByZW5kZXI6IGZvcm1hdFN0cmluZ1JlbmRlcgp9XTsgLy8gY29uc3QgZm9ybWF0cyA9IChhcnkgPSBbXSkgPT4gewovLyAgIGNvbnN0IG1hcCA9IHt9OwovLyAgIGJhc2VGb3JtYXRzLmNvbmNhdChhcnkpLmZvckVhY2goKGYpID0+IHsKLy8gICAgIG1hcFtmLmtleV0gPSBmOwovLyAgIH0pOwovLyAgIHJldHVybiBtYXA7Ci8vIH07Cgp2YXIgZm9ybWF0bSA9IHt9OwpiYXNlRm9ybWF0cy5mb3JFYWNoKGZ1bmN0aW9uIChmKSB7CiAgZm9ybWF0bVtmLmtleV0gPSBmOwp9KTsKZXhwb3J0IGRlZmF1bHQge307CmV4cG9ydCB7IGZvcm1hdG0sIGJhc2VGb3JtYXRzIH07"},{"version":3,"sources":["D:/代码/del_demo/VisualizationExcle_Demo/src/components/x-spreadsheet/core/format.js"],"names":["tf","formatStringRender","v","formatNumberRender","test","v1","Number","toFixed","toString","split","first","parts","replace","baseFormats","key","title","type","render","label","formatm","forEach","f"],"mappings":"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","sourcesContent":["import { tf } from '../locale/locale';\r\n\r\nconst formatStringRender = v => v;\r\n\r\nconst formatNumberRender = (v) => {\r\n  // match \"-12.1\" or \"12\" or \"12.1\"\r\n  if (/^(-?\\d*.?\\d*)$/.test(v)) {\r\n    const v1 = Number(v).toFixed(2).toString();\r\n    const [first, ...parts] = v1.split('\\\\.');\r\n    return [first.replace(/(\\d)(?=(\\d{3})+(?!\\d))/g, '$1,'), ...parts];\r\n  }\r\n  return v;\r\n};\r\n\r\nconst baseFormats = [\r\n  {\r\n    key: 'normal',\r\n    title: tf('format.normal'),\r\n    type: 'string',\r\n    render: formatStringRender,\r\n  },\r\n  {\r\n    key: 'text',\r\n    title: tf('format.text'),\r\n    type: 'string',\r\n    render: formatStringRender,\r\n  },\r\n  {\r\n    key: 'number',\r\n    title: tf('format.number'),\r\n    type: 'number',\r\n    label: '1,000.12',\r\n    render: formatNumberRender,\r\n  },\r\n  {\r\n    key: 'percent',\r\n    title: tf('format.percent'),\r\n    type: 'number',\r\n    label: '10.12%',\r\n    render: v => `${v}%`,\r\n  },\r\n  {\r\n    key: 'rmb',\r\n    title: tf('format.rmb'),\r\n    type: 'number',\r\n    label: '￥10.00',\r\n    render: v => `￥${formatNumberRender(v)}`,\r\n  },\r\n  {\r\n    key: 'usd',\r\n    title: tf('format.usd'),\r\n    type: 'number',\r\n    label: '$10.00',\r\n    render: v => `$${formatNumberRender(v)}`,\r\n  },\r\n  {\r\n    key: 'eur',\r\n    title: tf('format.eur'),\r\n    type: 'number',\r\n    label: '€10.00',\r\n    render: v => `€${formatNumberRender(v)}`,\r\n  },\r\n  {\r\n    key: 'date',\r\n    title: tf('format.date'),\r\n    type: 'date',\r\n    label: '26/09/2008',\r\n    render: formatStringRender,\r\n  },\r\n  {\r\n    key: 'time',\r\n    title: tf('format.time'),\r\n    type: 'date',\r\n    label: '15:59:00',\r\n    render: formatStringRender,\r\n  },\r\n  {\r\n    key: 'datetime',\r\n    title: tf('format.datetime'),\r\n    type: 'date',\r\n    label: '26/09/2008 15:59:00',\r\n    render: formatStringRender,\r\n  },\r\n  {\r\n    key: 'duration',\r\n    title: tf('format.duration'),\r\n    type: 'date',\r\n    label: '24:01:00',\r\n    render: formatStringRender,\r\n  },\r\n];\r\n\r\n// const formats = (ary = []) => {\r\n//   const map = {};\r\n//   baseFormats.concat(ary).forEach((f) => {\r\n//     map[f.key] = f;\r\n//   });\r\n//   return map;\r\n// };\r\nconst formatm = {};\r\nbaseFormats.forEach((f) => {\r\n  formatm[f.key] = f;\r\n});\r\n\r\nexport default {\r\n};\r\nexport {\r\n  formatm,\r\n  baseFormats,\r\n};\r\n"]}]}