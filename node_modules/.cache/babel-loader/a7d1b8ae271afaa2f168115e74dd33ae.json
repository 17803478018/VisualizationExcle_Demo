{"remainingRequest":"C:\\Users\\吴建明\\Desktop\\VisualizationExcle_Demo\\node_modules\\babel-loader\\lib\\index.js!C:\\Users\\吴建明\\Desktop\\VisualizationExcle_Demo\\node_modules\\eslint-loader\\index.js??ref--13-0!C:\\Users\\吴建明\\Desktop\\VisualizationExcle_Demo\\src\\components\\x-spreadsheet\\core\\merge.js","dependencies":[{"path":"C:\\Users\\吴建明\\Desktop\\VisualizationExcle_Demo\\src\\components\\x-spreadsheet\\core\\merge.js","mtime":1616639586838},{"path":"C:\\Users\\吴建明\\Desktop\\VisualizationExcle_Demo\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1616639573358},{"path":"C:\\Users\\吴建明\\Desktop\\VisualizationExcle_Demo\\node_modules\\babel-loader\\lib\\index.js","mtime":1616639572994},{"path":"C:\\Users\\吴建明\\Desktop\\VisualizationExcle_Demo\\node_modules\\eslint-loader\\index.js","mtime":1616639576682}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:aW1wb3J0IF9jbGFzc0NhbGxDaGVjayBmcm9tICJDOi9Vc2Vycy9cdTU0MzRcdTVFRkFcdTY2MEUvRGVza3RvcC9WaXN1YWxpemF0aW9uRXhjbGVfRGVtby9ub2RlX21vZHVsZXMvQGJhYmVsL3J1bnRpbWUvaGVscGVycy9lc20vY2xhc3NDYWxsQ2hlY2siOwppbXBvcnQgX2NyZWF0ZUNsYXNzIGZyb20gIkM6L1VzZXJzL1x1NTQzNFx1NUVGQVx1NjYwRS9EZXNrdG9wL1Zpc3VhbGl6YXRpb25FeGNsZV9EZW1vL25vZGVfbW9kdWxlcy9AYmFiZWwvcnVudGltZS9oZWxwZXJzL2VzbS9jcmVhdGVDbGFzcyI7CmltcG9ydCAiY29yZS1qcy9tb2R1bGVzL3dlYi5kb20tY29sbGVjdGlvbnMuZm9yLWVhY2guanMiOwppbXBvcnQgImNvcmUtanMvbW9kdWxlcy9lcy5hcnJheS5maWx0ZXIuanMiOwppbXBvcnQgImNvcmUtanMvbW9kdWxlcy9lcy5hcnJheS5pbmNsdWRlcy5qcyI7CmltcG9ydCAiY29yZS1qcy9tb2R1bGVzL2VzLnN0cmluZy5pbmNsdWRlcy5qcyI7CmltcG9ydCAiY29yZS1qcy9tb2R1bGVzL2VzLmFycmF5Lm1hcC5qcyI7CmltcG9ydCAiY29yZS1qcy9tb2R1bGVzL2VzLm9iamVjdC50by1zdHJpbmcuanMiOwppbXBvcnQgImNvcmUtanMvbW9kdWxlcy9lcy5yZWdleHAudG8tc3RyaW5nLmpzIjsKaW1wb3J0IHsgQ2VsbFJhbmdlIH0gZnJvbSAnLi9jZWxsX3JhbmdlJzsKCnZhciBNZXJnZXMgPSAvKiNfX1BVUkVfXyovZnVuY3Rpb24gKCkgewogIGZ1bmN0aW9uIE1lcmdlcygpIHsKICAgIHZhciBkID0gYXJndW1lbnRzLmxlbmd0aCA+IDAgJiYgYXJndW1lbnRzWzBdICE9PSB1bmRlZmluZWQgPyBhcmd1bWVudHNbMF0gOiBbXTsKCiAgICBfY2xhc3NDYWxsQ2hlY2sodGhpcywgTWVyZ2VzKTsKCiAgICB0aGlzLl8gPSBkOwogIH0KCiAgX2NyZWF0ZUNsYXNzKE1lcmdlcywgW3sKICAgIGtleTogImZvckVhY2giLAogICAgdmFsdWU6IGZ1bmN0aW9uIGZvckVhY2goY2IpIHsKICAgICAgdGhpcy5fLmZvckVhY2goY2IpOwogICAgfQogIH0sIHsKICAgIGtleTogImRlbGV0ZVdpdGhpbiIsCiAgICB2YWx1ZTogZnVuY3Rpb24gZGVsZXRlV2l0aGluKGNyKSB7CiAgICAgIHRoaXMuXyA9IHRoaXMuXy5maWx0ZXIoZnVuY3Rpb24gKGl0KSB7CiAgICAgICAgcmV0dXJuICFpdC53aXRoaW4oY3IpOwogICAgICB9KTsKICAgIH0KICB9LCB7CiAgICBrZXk6ICJnZXRGaXJzdEluY2x1ZGVzIiwKICAgIHZhbHVlOiBmdW5jdGlvbiBnZXRGaXJzdEluY2x1ZGVzKHJpLCBjaSkgewogICAgICBmb3IgKHZhciBpID0gMDsgaSA8IHRoaXMuXy5sZW5ndGg7IGkgKz0gMSkgewogICAgICAgIHZhciBpdCA9IHRoaXMuX1tpXTsKCiAgICAgICAgaWYgKGl0LmluY2x1ZGVzKHJpLCBjaSkpIHsKICAgICAgICAgIHJldHVybiBpdDsKICAgICAgICB9CiAgICAgIH0KCiAgICAgIHJldHVybiBudWxsOwogICAgfQogIH0sIHsKICAgIGtleTogImZpbHRlckludGVyc2VjdHMiLAogICAgdmFsdWU6IGZ1bmN0aW9uIGZpbHRlckludGVyc2VjdHMoY2VsbFJhbmdlKSB7CiAgICAgIHJldHVybiBuZXcgTWVyZ2VzKHRoaXMuXy5maWx0ZXIoZnVuY3Rpb24gKGl0KSB7CiAgICAgICAgcmV0dXJuIGl0LmludGVyc2VjdHMoY2VsbFJhbmdlKTsKICAgICAgfSkpOwogICAgfQogIH0sIHsKICAgIGtleTogImludGVyc2VjdHMiLAogICAgdmFsdWU6IGZ1bmN0aW9uIGludGVyc2VjdHMoY2VsbFJhbmdlKSB7CiAgICAgIGZvciAodmFyIGkgPSAwOyBpIDwgdGhpcy5fLmxlbmd0aDsgaSArPSAxKSB7CiAgICAgICAgdmFyIGl0ID0gdGhpcy5fW2ldOwoKICAgICAgICBpZiAoaXQuaW50ZXJzZWN0cyhjZWxsUmFuZ2UpKSB7CiAgICAgICAgICAvLyBjb25zb2xlLmxvZygnaW50ZXJzZWN0cycpOwogICAgICAgICAgcmV0dXJuIHRydWU7CiAgICAgICAgfQogICAgICB9CgogICAgICByZXR1cm4gZmFsc2U7CiAgICB9CiAgfSwgewogICAga2V5OiAidW5pb24iLAogICAgdmFsdWU6IGZ1bmN0aW9uIHVuaW9uKGNlbGxSYW5nZSkgewogICAgICB2YXIgY3IgPSBjZWxsUmFuZ2U7CgogICAgICB0aGlzLl8uZm9yRWFjaChmdW5jdGlvbiAoaXQpIHsKICAgICAgICBpZiAoaXQuaW50ZXJzZWN0cyhjcikpIHsKICAgICAgICAgIGNyID0gaXQudW5pb24oY3IpOwogICAgICAgIH0KICAgICAgfSk7CgogICAgICByZXR1cm4gY3I7CiAgICB9CiAgfSwgewogICAga2V5OiAiYWRkIiwKICAgIHZhbHVlOiBmdW5jdGlvbiBhZGQoY3IpIHsKICAgICAgdGhpcy5kZWxldGVXaXRoaW4oY3IpOwoKICAgICAgdGhpcy5fLnB1c2goY3IpOwogICAgfSAvLyB0eXBlOiByb3cgfCBjb2x1bW4KCiAgfSwgewogICAga2V5OiAic2hpZnQiLAogICAgdmFsdWU6IGZ1bmN0aW9uIHNoaWZ0KHR5cGUsIGluZGV4LCBuLCBjYldpdGhpbikgewogICAgICB0aGlzLl8uZm9yRWFjaChmdW5jdGlvbiAoY2VsbFJhbmdlKSB7CiAgICAgICAgdmFyIHNyaSA9IGNlbGxSYW5nZS5zcmksCiAgICAgICAgICAgIHNjaSA9IGNlbGxSYW5nZS5zY2ksCiAgICAgICAgICAgIGVyaSA9IGNlbGxSYW5nZS5lcmksCiAgICAgICAgICAgIGVjaSA9IGNlbGxSYW5nZS5lY2k7CiAgICAgICAgdmFyIHJhbmdlID0gY2VsbFJhbmdlOwoKICAgICAgICBpZiAodHlwZSA9PT0gJ3JvdycpIHsKICAgICAgICAgIGlmIChzcmkgPj0gaW5kZXgpIHsKICAgICAgICAgICAgcmFuZ2Uuc3JpICs9IG47CiAgICAgICAgICAgIHJhbmdlLmVyaSArPSBuOwogICAgICAgICAgfSBlbHNlIGlmIChzcmkgPCBpbmRleCAmJiBpbmRleCA8PSBlcmkpIHsKICAgICAgICAgICAgcmFuZ2UuZXJpICs9IG47CiAgICAgICAgICAgIGNiV2l0aGluKHNyaSwgc2NpLCBuLCAwKTsKICAgICAgICAgIH0KICAgICAgICB9IGVsc2UgaWYgKHR5cGUgPT09ICdjb2x1bW4nKSB7CiAgICAgICAgICBpZiAoc2NpID49IGluZGV4KSB7CiAgICAgICAgICAgIHJhbmdlLnNjaSArPSBuOwogICAgICAgICAgICByYW5nZS5lY2kgKz0gbjsKICAgICAgICAgIH0gZWxzZSBpZiAoc2NpIDwgaW5kZXggJiYgaW5kZXggPD0gZWNpKSB7CiAgICAgICAgICAgIHJhbmdlLmVjaSArPSBuOwogICAgICAgICAgICBjYldpdGhpbihzcmksIHNjaSwgMCwgbik7CiAgICAgICAgICB9CiAgICAgICAgfQogICAgICB9KTsKICAgIH0KICB9LCB7CiAgICBrZXk6ICJtb3ZlIiwKICAgIHZhbHVlOiBmdW5jdGlvbiBtb3ZlKGNlbGxSYW5nZSwgcm4sIGNuKSB7CiAgICAgIHRoaXMuXy5mb3JFYWNoKGZ1bmN0aW9uIChpdDEpIHsKICAgICAgICB2YXIgaXQgPSBpdDE7CgogICAgICAgIGlmIChpdC53aXRoaW4oY2VsbFJhbmdlKSkgewogICAgICAgICAgaXQuZXJpICs9IHJuOwogICAgICAgICAgaXQuc3JpICs9IHJuOwogICAgICAgICAgaXQuc2NpICs9IGNuOwogICAgICAgICAgaXQuZWNpICs9IGNuOwogICAgICAgIH0KICAgICAgfSk7CiAgICB9CiAgfSwgewogICAga2V5OiAic2V0RGF0YSIsCiAgICB2YWx1ZTogZnVuY3Rpb24gc2V0RGF0YShtZXJnZXMpIHsKICAgICAgdGhpcy5fID0gbWVyZ2VzLm1hcChmdW5jdGlvbiAobWVyZ2UpIHsKICAgICAgICByZXR1cm4gQ2VsbFJhbmdlLnZhbHVlT2YobWVyZ2UpOwogICAgICB9KTsKICAgICAgcmV0dXJuIHRoaXM7CiAgICB9CiAgfSwgewogICAga2V5OiAiZ2V0RGF0YSIsCiAgICB2YWx1ZTogZnVuY3Rpb24gZ2V0RGF0YSgpIHsKICAgICAgcmV0dXJuIHRoaXMuXy5tYXAoZnVuY3Rpb24gKG1lcmdlKSB7CiAgICAgICAgcmV0dXJuIG1lcmdlLnRvU3RyaW5nKCk7CiAgICAgIH0pOwogICAgfQogIH1dKTsKCiAgcmV0dXJuIE1lcmdlczsKfSgpOwoKZXhwb3J0IGRlZmF1bHQge307CmV4cG9ydCB7IE1lcmdlcyB9Ow=="},{"version":3,"sources":["C:/Users/吴建明/Desktop/VisualizationExcle_Demo/src/components/x-spreadsheet/core/merge.js"],"names":["CellRange","Merges","d","_","cb","forEach","cr","filter","it","within","ri","ci","i","length","includes","cellRange","intersects","union","deleteWithin","push","type","index","n","cbWithin","sri","sci","eri","eci","range","rn","cn","it1","merges","map","merge","valueOf","toString"],"mappings":"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","sourcesContent":["import { CellRange } from './cell_range';\r\n\r\nclass Merges {\r\n  constructor(d = []) {\r\n    this._ = d;\r\n  }\r\n\r\n  forEach(cb) {\r\n    this._.forEach(cb);\r\n  }\r\n\r\n  deleteWithin(cr) {\r\n    this._ = this._.filter(it => !it.within(cr));\r\n  }\r\n\r\n  getFirstIncludes(ri, ci) {\r\n    for (let i = 0; i < this._.length; i += 1) {\r\n      const it = this._[i];\r\n      if (it.includes(ri, ci)) {\r\n        return it;\r\n      }\r\n    }\r\n    return null;\r\n  }\r\n\r\n  filterIntersects(cellRange) {\r\n    return new Merges(this._.filter(it => it.intersects(cellRange)));\r\n  }\r\n\r\n  intersects(cellRange) {\r\n    for (let i = 0; i < this._.length; i += 1) {\r\n      const it = this._[i];\r\n      if (it.intersects(cellRange)) {\r\n        // console.log('intersects');\r\n        return true;\r\n      }\r\n    }\r\n    return false;\r\n  }\r\n\r\n  union(cellRange) {\r\n    let cr = cellRange;\r\n    this._.forEach((it) => {\r\n      if (it.intersects(cr)) {\r\n        cr = it.union(cr);\r\n      }\r\n    });\r\n    return cr;\r\n  }\r\n\r\n  add(cr) {\r\n    this.deleteWithin(cr);\r\n    this._.push(cr);\r\n  }\r\n\r\n  // type: row | column\r\n  shift(type, index, n, cbWithin) {\r\n    this._.forEach((cellRange) => {\r\n      const {\r\n        sri, sci, eri, eci,\r\n      } = cellRange;\r\n      const range = cellRange;\r\n      if (type === 'row') {\r\n        if (sri >= index) {\r\n          range.sri += n;\r\n          range.eri += n;\r\n        } else if (sri < index && index <= eri) {\r\n          range.eri += n;\r\n          cbWithin(sri, sci, n, 0);\r\n        }\r\n      } else if (type === 'column') {\r\n        if (sci >= index) {\r\n          range.sci += n;\r\n          range.eci += n;\r\n        } else if (sci < index && index <= eci) {\r\n          range.eci += n;\r\n          cbWithin(sri, sci, 0, n);\r\n        }\r\n      }\r\n    });\r\n  }\r\n\r\n  move(cellRange, rn, cn) {\r\n    this._.forEach((it1) => {\r\n      const it = it1;\r\n      if (it.within(cellRange)) {\r\n        it.eri += rn;\r\n        it.sri += rn;\r\n        it.sci += cn;\r\n        it.eci += cn;\r\n      }\r\n    });\r\n  }\r\n\r\n  setData(merges) {\r\n    this._ = merges.map(merge => CellRange.valueOf(merge));\r\n    return this;\r\n  }\r\n\r\n  getData() {\r\n    return this._.map(merge => merge.toString());\r\n  }\r\n}\r\n\r\nexport default {};\r\nexport {\r\n  Merges,\r\n};\r\n"]}]}