{"remainingRequest":"C:\\Users\\吴建明\\Desktop\\VisualizationExcle_Demo\\node_modules\\babel-loader\\lib\\index.js!C:\\Users\\吴建明\\Desktop\\VisualizationExcle_Demo\\node_modules\\eslint-loader\\index.js??ref--13-0!C:\\Users\\吴建明\\Desktop\\VisualizationExcle_Demo\\src\\components\\x-spreadsheet\\locale\\locale.js","dependencies":[{"path":"C:\\Users\\吴建明\\Desktop\\VisualizationExcle_Demo\\src\\components\\x-spreadsheet\\locale\\locale.js","mtime":1615364198228},{"path":"C:\\Users\\吴建明\\Desktop\\VisualizationExcle_Demo\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1615364186494},{"path":"C:\\Users\\吴建明\\Desktop\\VisualizationExcle_Demo\\node_modules\\babel-loader\\lib\\index.js","mtime":1615364186192},{"path":"C:\\Users\\吴建明\\Desktop\\VisualizationExcle_Demo\\node_modules\\eslint-loader\\index.js","mtime":1615364189991}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:aW1wb3J0IF9jcmVhdGVGb3JPZkl0ZXJhdG9ySGVscGVyIGZyb20gIkM6L1VzZXJzL1x1NTQzNFx1NUVGQVx1NjYwRS9EZXNrdG9wL1Zpc3VhbGl6YXRpb25FeGNsZV9EZW1vL25vZGVfbW9kdWxlcy9AYmFiZWwvcnVudGltZS9oZWxwZXJzL2VzbS9jcmVhdGVGb3JPZkl0ZXJhdG9ySGVscGVyIjsKaW1wb3J0ICJjb3JlLWpzL21vZHVsZXMvZXMuc3RyaW5nLm1hdGNoLmpzIjsKaW1wb3J0ICJjb3JlLWpzL21vZHVsZXMvZXMucmVnZXhwLmV4ZWMuanMiOwoKLyogZ2xvYmFsIHdpbmRvdyAqLwppbXBvcnQgZW4gZnJvbSAnLi9lbic7IC8vIERlZmluZXMgdGhlIGZhbGxiYWNrIGxhbmd1YWdlIGFzIEVuZ2xpc2gKCnZhciAkbGFuZ3VhZ2VzID0gWydlbiddOwp2YXIgJG1lc3NhZ2VzID0gewogIGVuOiBlbgp9OwoKZnVuY3Rpb24gdHJhbnNsYXRlKGtleSwgbWVzc2FnZXMpIHsKICBpZiAobWVzc2FnZXMpIHsKICAgIC8vIFJldHVybiB0aGUgdHJhbnNsYXRpb24gZnJvbSB0aGUgZmlyc3QgbGFuZ3VhZ2UgaW4gdGhlIGxhbmd1YWdlcyBhcnJheQogICAgLy8gdGhhdCBoYXMgYSB2YWx1ZSBmb3IgdGhlIHByb3ZpZGVkIGtleS4KICAgIHZhciBfaXRlcmF0b3IgPSBfY3JlYXRlRm9yT2ZJdGVyYXRvckhlbHBlcigkbGFuZ3VhZ2VzKSwKICAgICAgICBfc3RlcDsKCiAgICB0cnkgewogICAgICBmb3IgKF9pdGVyYXRvci5zKCk7ICEoX3N0ZXAgPSBfaXRlcmF0b3IubigpKS5kb25lOykgewogICAgICAgIHZhciBsYW5nID0gX3N0ZXAudmFsdWU7CiAgICAgICAgaWYgKCFtZXNzYWdlc1tsYW5nXSkgYnJlYWs7CiAgICAgICAgdmFyIG1lc3NhZ2UgPSBtZXNzYWdlc1tsYW5nXTsgLy8gU3BsaXRzIHRoZSBrZXkgYXQgJy4nIGV4Y2VwdCB3aGVyZSBlc2NhcGVkIGFzICdcLicKCiAgICAgICAgdmFyIGtleXMgPSBrZXkubWF0Y2goLyg/OlxcLnxbXi5dKSsvZyk7CgogICAgICAgIGZvciAodmFyIGkgPSAwOyBpIDwga2V5cy5sZW5ndGg7IGkgKz0gMSkgewogICAgICAgICAgdmFyIHByb3BlcnR5ID0ga2V5c1tpXTsKICAgICAgICAgIHZhciB2YWx1ZSA9IG1lc3NhZ2VbcHJvcGVydHldOyAvLyBJZiB2YWx1ZSBkb2Vzbid0IGV4aXN0LCB0cnkgbmV4dCBsYW5ndWFnZQoKICAgICAgICAgIGlmICghdmFsdWUpIGJyZWFrOwogICAgICAgICAgaWYgKGkgPT09IGtleXMubGVuZ3RoIC0gMSkgcmV0dXJuIHZhbHVlOyAvLyBNb3ZlIGRvd24gdG8gdGhlIG5leHQgbGV2ZWwgb2YgdGhlIG1lc3NhZ2VzIG9iamVjdAoKICAgICAgICAgIG1lc3NhZ2UgPSB2YWx1ZTsKICAgICAgICB9CiAgICAgIH0KICAgIH0gY2F0Y2ggKGVycikgewogICAgICBfaXRlcmF0b3IuZShlcnIpOwogICAgfSBmaW5hbGx5IHsKICAgICAgX2l0ZXJhdG9yLmYoKTsKICAgIH0KICB9CgogIHJldHVybiB1bmRlZmluZWQ7Cn0KCmZ1bmN0aW9uIHQoa2V5KSB7CiAgdmFyIHYgPSB0cmFuc2xhdGUoa2V5LCAkbWVzc2FnZXMpOwoKICBpZiAoIXYgJiYgd2luZG93ICYmIHdpbmRvdy54X3NwcmVhZHNoZWV0ICYmIHdpbmRvdy54X3NwcmVhZHNoZWV0LiRtZXNzYWdlcykgewogICAgdiA9IHRyYW5zbGF0ZShrZXksIHdpbmRvdy54X3NwcmVhZHNoZWV0LiRtZXNzYWdlcyk7CiAgfQoKICByZXR1cm4gdiB8fCAnJzsKfQoKZnVuY3Rpb24gdGYoa2V5KSB7CiAgcmV0dXJuIGZ1bmN0aW9uICgpIHsKICAgIHJldHVybiB0KGtleSk7CiAgfTsKfSAvLyBJZiBjbGVhckxhbmdMaXN0IGlzIHNldCB0byBmYWxzZSwgbGFuZyB3aWxsIGJlIGFkZGVkIHRvIHRoZSBmcm9udCBvZiB0aGUKLy8gbGFuZ3VhZ2VzIGFycmF5LiBUaGUgbGFuZ3VhZ2VzIGluIHRoZSBsYW5ndWFnZSBhcnJheSBhcmUgc2VhcmNoZWQgaW4gb3JkZXIKLy8gdG8gZmluZCBhIHRyYW5zbGF0aW9uLiBUaGlzIGFsbG93cyB0aGUgdXNlIG9mIG90aGVyIGxhbmd1YWdlcyBhcyBhIGZhbGxiYWNrCi8vIGlmIGxhbmcgaXMgbWlzc2luZyBzb21lIGtleXMuIFRoZSBsYW5ndWFnZSBhcnJheSBpcyBwcmVsb2FkZWQgd2l0aCBFbmdsaXNoLgovLyBUbyBzZXQgdGhlIGxhbmd1YWdlcyBhcnJheSB0byBvbmx5IGluY2x1ZGUgbGFuZywgc2V0IGNsZWFyTGFuZ0xpc3QgdG8gdHJ1ZS4KCgpmdW5jdGlvbiBsb2NhbGUobGFuZywgbWVzc2FnZSkgewogIHZhciBjbGVhckxhbmdMaXN0ID0gYXJndW1lbnRzLmxlbmd0aCA+IDIgJiYgYXJndW1lbnRzWzJdICE9PSB1bmRlZmluZWQgPyBhcmd1bWVudHNbMl0gOiBmYWxzZTsKCiAgaWYgKGNsZWFyTGFuZ0xpc3QpIHsKICAgICRsYW5ndWFnZXMgPSBbbGFuZ107CiAgfSBlbHNlIHsKICAgIC8vIEFwcGVuZCB0byBmcm9udCBvZiBhcnJheS4KICAgIC8vIFRyYW5zbGF0aW9uIG1ldGhvZCB3aWxsIHVzZSB0aGUgZmlyc3QgbGFuZ3VhZ2UgaW4gdGhlIGxpc3QgdGhhdCBoYXMgYQogICAgLy8gbWF0Y2hpbmcga2V5LgogICAgJGxhbmd1YWdlcy51bnNoaWZ0KGxhbmcpOwogIH0KCiAgaWYgKG1lc3NhZ2UpIHsKICAgICRtZXNzYWdlc1tsYW5nXSA9IG1lc3NhZ2U7CiAgfQp9CgpleHBvcnQgZGVmYXVsdCB7CiAgdDogdAp9OwpleHBvcnQgeyBsb2NhbGUsIHQsIHRmIH07"},{"version":3,"sources":["C:/Users/吴建明/Desktop/VisualizationExcle_Demo/src/components/x-spreadsheet/locale/locale.js"],"names":["en","$languages","$messages","translate","key","messages","lang","message","keys","match","i","length","property","value","undefined","t","v","window","x_spreadsheet","tf","locale","clearLangList","unshift"],"mappings":";;;;AAAA;AACA,OAAOA,EAAP,MAAe,MAAf,C,CAEA;;AACA,IAAIC,UAAU,GAAG,CAAC,IAAD,CAAjB;AACA,IAAMC,SAAS,GAAG;AAChBF,EAAAA,EAAE,EAAFA;AADgB,CAAlB;;AAIA,SAASG,SAAT,CAAmBC,GAAnB,EAAwBC,QAAxB,EAAkC;AAChC,MAAIA,QAAJ,EAAc;AACZ;AACA;AAFY,+CAGOJ,UAHP;AAAA;;AAAA;AAGZ,0DAA+B;AAAA,YAApBK,IAAoB;AAC7B,YAAI,CAACD,QAAQ,CAACC,IAAD,CAAb,EAAqB;AAErB,YAAIC,OAAO,GAAGF,QAAQ,CAACC,IAAD,CAAtB,CAH6B,CAK7B;;AACA,YAAME,IAAI,GAAGJ,GAAG,CAACK,KAAJ,CAAU,gBAAV,CAAb;;AAEA,aAAK,IAAIC,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGF,IAAI,CAACG,MAAzB,EAAiCD,CAAC,IAAI,CAAtC,EAAyC;AACvC,cAAME,QAAQ,GAAGJ,IAAI,CAACE,CAAD,CAArB;AACA,cAAMG,KAAK,GAAGN,OAAO,CAACK,QAAD,CAArB,CAFuC,CAIvC;;AACA,cAAI,CAACC,KAAL,EAAY;AAEZ,cAAIH,CAAC,KAAKF,IAAI,CAACG,MAAL,GAAc,CAAxB,EAA2B,OAAOE,KAAP,CAPY,CASvC;;AACAN,UAAAA,OAAO,GAAGM,KAAV;AACD;AACF;AAvBW;AAAA;AAAA;AAAA;AAAA;AAwBb;;AAED,SAAOC,SAAP;AACD;;AAED,SAASC,CAAT,CAAWX,GAAX,EAAgB;AACd,MAAIY,CAAC,GAAGb,SAAS,CAACC,GAAD,EAAMF,SAAN,CAAjB;;AACA,MAAI,CAACc,CAAD,IAAMC,MAAN,IAAgBA,MAAM,CAACC,aAAvB,IAAwCD,MAAM,CAACC,aAAP,CAAqBhB,SAAjE,EAA4E;AAC1Ec,IAAAA,CAAC,GAAGb,SAAS,CAACC,GAAD,EAAMa,MAAM,CAACC,aAAP,CAAqBhB,SAA3B,CAAb;AACD;;AACD,SAAOc,CAAC,IAAI,EAAZ;AACD;;AAED,SAASG,EAAT,CAAYf,GAAZ,EAAiB;AACf,SAAO;AAAA,WAAMW,CAAC,CAACX,GAAD,CAAP;AAAA,GAAP;AACD,C,CAED;AACA;AACA;AACA;AACA;;;AACA,SAASgB,MAAT,CAAgBd,IAAhB,EAAsBC,OAAtB,EAAoD;AAAA,MAArBc,aAAqB,uEAAP,KAAO;;AAClD,MAAIA,aAAJ,EAAmB;AACjBpB,IAAAA,UAAU,GAAG,CAACK,IAAD,CAAb;AACD,GAFD,MAEO;AACL;AACA;AACA;AACAL,IAAAA,UAAU,CAACqB,OAAX,CAAmBhB,IAAnB;AACD;;AAED,MAAIC,OAAJ,EAAa;AACXL,IAAAA,SAAS,CAACI,IAAD,CAAT,GAAkBC,OAAlB;AACD;AACF;;AAED,eAAe;AACbQ,EAAAA,CAAC,EAADA;AADa,CAAf;AAIA,SACEK,MADF,EAEEL,CAFF,EAGEI,EAHF","sourcesContent":["/* global window */\r\nimport en from './en';\r\n\r\n// Defines the fallback language as English\r\nlet $languages = ['en'];\r\nconst $messages = {\r\n  en,\r\n};\r\n\r\nfunction translate(key, messages) {\r\n  if (messages) {\r\n    // Return the translation from the first language in the languages array\r\n    // that has a value for the provided key.\r\n    for (const lang of $languages) {\r\n      if (!messages[lang]) break;\r\n\r\n      let message = messages[lang];\r\n\r\n      // Splits the key at '.' except where escaped as '\\.'\r\n      const keys = key.match(/(?:\\\\.|[^.])+/g);\r\n\r\n      for (let i = 0; i < keys.length; i += 1) {\r\n        const property = keys[i];\r\n        const value = message[property];\r\n\r\n        // If value doesn't exist, try next language\r\n        if (!value) break;\r\n\r\n        if (i === keys.length - 1) return value;\r\n\r\n        // Move down to the next level of the messages object\r\n        message = value;\r\n      }\r\n    }\r\n  }\r\n\r\n  return undefined;\r\n}\r\n\r\nfunction t(key) {\r\n  let v = translate(key, $messages);\r\n  if (!v && window && window.x_spreadsheet && window.x_spreadsheet.$messages) {\r\n    v = translate(key, window.x_spreadsheet.$messages);\r\n  }\r\n  return v || '';\r\n}\r\n\r\nfunction tf(key) {\r\n  return () => t(key);\r\n}\r\n\r\n// If clearLangList is set to false, lang will be added to the front of the\r\n// languages array. The languages in the language array are searched in order\r\n// to find a translation. This allows the use of other languages as a fallback\r\n// if lang is missing some keys. The language array is preloaded with English.\r\n// To set the languages array to only include lang, set clearLangList to true.\r\nfunction locale(lang, message, clearLangList=false) {\r\n  if (clearLangList) {\r\n    $languages = [lang];\r\n  } else {\r\n    // Append to front of array.\r\n    // Translation method will use the first language in the list that has a\r\n    // matching key.\r\n    $languages.unshift(lang);\r\n  }\r\n\r\n  if (message) {\r\n    $messages[lang] = message;\r\n  }\r\n}\r\n\r\nexport default {\r\n  t,\r\n};\r\n\r\nexport {\r\n  locale,\r\n  t,\r\n  tf,\r\n};\r\n"]}]}