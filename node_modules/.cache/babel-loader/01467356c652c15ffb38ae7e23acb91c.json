{"remainingRequest":"D:\\代码\\del_demo\\VisualizationExcle_Demo\\node_modules\\babel-loader\\lib\\index.js!D:\\代码\\del_demo\\VisualizationExcle_Demo\\node_modules\\eslint-loader\\index.js??ref--13-0!D:\\代码\\del_demo\\VisualizationExcle_Demo\\src\\components\\x-spreadsheet\\core\\validation.js","dependencies":[{"path":"D:\\代码\\del_demo\\VisualizationExcle_Demo\\src\\components\\x-spreadsheet\\core\\validation.js","mtime":1614915429363},{"path":"D:\\代码\\del_demo\\VisualizationExcle_Demo\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1596536485880},{"path":"D:\\代码\\del_demo\\VisualizationExcle_Demo\\node_modules\\babel-loader\\lib\\index.js","mtime":1606828682259},{"path":"D:\\代码\\del_demo\\VisualizationExcle_Demo\\node_modules\\eslint-loader\\index.js","mtime":1603719226989}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:aW1wb3J0IF9zbGljZWRUb0FycmF5IGZyb20gIkQ6L1x1NEVFM1x1NzgwMS9kZWxfZGVtby9WaXN1YWxpemF0aW9uRXhjbGVfRGVtby9ub2RlX21vZHVsZXMvQGJhYmVsL3J1bnRpbWUvaGVscGVycy9lc20vc2xpY2VkVG9BcnJheSI7CmltcG9ydCBfY2xhc3NDYWxsQ2hlY2sgZnJvbSAiRDovXHU0RUUzXHU3ODAxL2RlbF9kZW1vL1Zpc3VhbGl6YXRpb25FeGNsZV9EZW1vL25vZGVfbW9kdWxlcy9AYmFiZWwvcnVudGltZS9oZWxwZXJzL2VzbS9jbGFzc0NhbGxDaGVjayI7CmltcG9ydCBfY3JlYXRlQ2xhc3MgZnJvbSAiRDovXHU0RUUzXHU3ODAxL2RlbF9kZW1vL1Zpc3VhbGl6YXRpb25FeGNsZV9EZW1vL25vZGVfbW9kdWxlcy9AYmFiZWwvcnVudGltZS9oZWxwZXJzL2VzbS9jcmVhdGVDbGFzcyI7CmltcG9ydCAiY29yZS1qcy9tb2R1bGVzL2VzLmFycmF5LmluY2x1ZGVzLmpzIjsKaW1wb3J0ICJjb3JlLWpzL21vZHVsZXMvZXMuc3RyaW5nLmluY2x1ZGVzLmpzIjsKaW1wb3J0ICJjb3JlLWpzL21vZHVsZXMvd2ViLmRvbS1jb2xsZWN0aW9ucy5mb3ItZWFjaC5qcyI7CmltcG9ydCAiY29yZS1qcy9tb2R1bGVzL2VzLm9iamVjdC50by1zdHJpbmcuanMiOwppbXBvcnQgImNvcmUtanMvbW9kdWxlcy9lcy5yZWdleHAudG8tc3RyaW5nLmpzIjsKaW1wb3J0ICJjb3JlLWpzL21vZHVsZXMvZXMubWFwLmpzIjsKaW1wb3J0ICJjb3JlLWpzL21vZHVsZXMvZXMuc3RyaW5nLml0ZXJhdG9yLmpzIjsKaW1wb3J0ICJjb3JlLWpzL21vZHVsZXMvd2ViLmRvbS1jb2xsZWN0aW9ucy5pdGVyYXRvci5qcyI7CmltcG9ydCAiY29yZS1qcy9tb2R1bGVzL2VzLmFycmF5LmNvbmNhdC5qcyI7CmltcG9ydCAiY29yZS1qcy9tb2R1bGVzL2VzLmFycmF5Lm1hcC5qcyI7CmltcG9ydCAiY29yZS1qcy9tb2R1bGVzL2VzLmFycmF5LmZpbHRlci5qcyI7CmltcG9ydCBWYWxpZGF0b3IgZnJvbSAnLi92YWxpZGF0b3InOwppbXBvcnQgeyBDZWxsUmFuZ2UgfSBmcm9tICcuL2NlbGxfcmFuZ2UnOwoKdmFyIFZhbGlkYXRpb24gPSAvKiNfX1BVUkVfXyovZnVuY3Rpb24gKCkgewogIGZ1bmN0aW9uIFZhbGlkYXRpb24obW9kZSwgcmVmcywgdmFsaWRhdG9yKSB7CiAgICBfY2xhc3NDYWxsQ2hlY2sodGhpcywgVmFsaWRhdGlvbik7CgogICAgdGhpcy5yZWZzID0gcmVmczsKICAgIHRoaXMubW9kZSA9IG1vZGU7IC8vIGNlbGwKCiAgICB0aGlzLnZhbGlkYXRvciA9IHZhbGlkYXRvcjsKICB9CgogIF9jcmVhdGVDbGFzcyhWYWxpZGF0aW9uLCBbewogICAga2V5OiAiaW5jbHVkZXMiLAogICAgdmFsdWU6IGZ1bmN0aW9uIGluY2x1ZGVzKHJpLCBjaSkgewogICAgICB2YXIgcmVmcyA9IHRoaXMucmVmczsKCiAgICAgIGZvciAodmFyIGkgPSAwOyBpIDwgcmVmcy5sZW5ndGg7IGkgKz0gMSkgewogICAgICAgIHZhciBjciA9IENlbGxSYW5nZS52YWx1ZU9mKHJlZnNbaV0pOwogICAgICAgIGlmIChjci5pbmNsdWRlcyhyaSwgY2kpKSByZXR1cm4gdHJ1ZTsKICAgICAgfQoKICAgICAgcmV0dXJuIGZhbHNlOwogICAgfQogIH0sIHsKICAgIGtleTogImFkZFJlZiIsCiAgICB2YWx1ZTogZnVuY3Rpb24gYWRkUmVmKHJlZikgewogICAgICB0aGlzLnJlbW92ZShDZWxsUmFuZ2UudmFsdWVPZihyZWYpKTsKICAgICAgdGhpcy5yZWZzLnB1c2gocmVmKTsKICAgIH0KICB9LCB7CiAgICBrZXk6ICJyZW1vdmUiLAogICAgdmFsdWU6IGZ1bmN0aW9uIHJlbW92ZShjZWxsUmFuZ2UpIHsKICAgICAgdmFyIG5yZWZzID0gW107CiAgICAgIHRoaXMucmVmcy5mb3JFYWNoKGZ1bmN0aW9uIChpdCkgewogICAgICAgIHZhciBjciA9IENlbGxSYW5nZS52YWx1ZU9mKGl0KTsKCiAgICAgICAgaWYgKGNyLmludGVyc2VjdHMoY2VsbFJhbmdlKSkgewogICAgICAgICAgdmFyIGNycyA9IGNyLmRpZmZlcmVuY2UoY2VsbFJhbmdlKTsKICAgICAgICAgIGNycy5mb3JFYWNoKGZ1bmN0aW9uIChpdDEpIHsKICAgICAgICAgICAgcmV0dXJuIG5yZWZzLnB1c2goaXQxLnRvU3RyaW5nKCkpOwogICAgICAgICAgfSk7CiAgICAgICAgfSBlbHNlIHsKICAgICAgICAgIG5yZWZzLnB1c2goaXQpOwogICAgICAgIH0KICAgICAgfSk7CiAgICAgIHRoaXMucmVmcyA9IG5yZWZzOwogICAgfQogIH0sIHsKICAgIGtleTogImdldERhdGEiLAogICAgdmFsdWU6IGZ1bmN0aW9uIGdldERhdGEoKSB7CiAgICAgIHZhciByZWZzID0gdGhpcy5yZWZzLAogICAgICAgICAgbW9kZSA9IHRoaXMubW9kZSwKICAgICAgICAgIHZhbGlkYXRvciA9IHRoaXMudmFsaWRhdG9yOwogICAgICB2YXIgdHlwZSA9IHZhbGlkYXRvci50eXBlLAogICAgICAgICAgcmVxdWlyZWQgPSB2YWxpZGF0b3IucmVxdWlyZWQsCiAgICAgICAgICBvcGVyYXRvciA9IHZhbGlkYXRvci5vcGVyYXRvciwKICAgICAgICAgIHZhbHVlID0gdmFsaWRhdG9yLnZhbHVlOwogICAgICByZXR1cm4gewogICAgICAgIHJlZnM6IHJlZnMsCiAgICAgICAgbW9kZTogbW9kZSwKICAgICAgICB0eXBlOiB0eXBlLAogICAgICAgIHJlcXVpcmVkOiByZXF1aXJlZCwKICAgICAgICBvcGVyYXRvcjogb3BlcmF0b3IsCiAgICAgICAgdmFsdWU6IHZhbHVlCiAgICAgIH07CiAgICB9CiAgfV0sIFt7CiAgICBrZXk6ICJ2YWx1ZU9mIiwKICAgIHZhbHVlOiBmdW5jdGlvbiB2YWx1ZU9mKF9yZWYpIHsKICAgICAgdmFyIHJlZnMgPSBfcmVmLnJlZnMsCiAgICAgICAgICBtb2RlID0gX3JlZi5tb2RlLAogICAgICAgICAgdHlwZSA9IF9yZWYudHlwZSwKICAgICAgICAgIHJlcXVpcmVkID0gX3JlZi5yZXF1aXJlZCwKICAgICAgICAgIG9wZXJhdG9yID0gX3JlZi5vcGVyYXRvciwKICAgICAgICAgIHZhbHVlID0gX3JlZi52YWx1ZTsKICAgICAgcmV0dXJuIG5ldyBWYWxpZGF0aW9uKG1vZGUsIHJlZnMsIG5ldyBWYWxpZGF0b3IodHlwZSwgcmVxdWlyZWQsIHZhbHVlLCBvcGVyYXRvcikpOwogICAgfQogIH1dKTsKCiAgcmV0dXJuIFZhbGlkYXRpb247Cn0oKTsKCnZhciBWYWxpZGF0aW9ucyA9IC8qI19fUFVSRV9fKi9mdW5jdGlvbiAoKSB7CiAgZnVuY3Rpb24gVmFsaWRhdGlvbnMoKSB7CiAgICBfY2xhc3NDYWxsQ2hlY2sodGhpcywgVmFsaWRhdGlvbnMpOwoKICAgIHRoaXMuXyA9IFtdOyAvLyByaV9jaTogZXJyTWVzc2FnZQoKICAgIHRoaXMuZXJyb3JzID0gbmV3IE1hcCgpOwogIH0KCiAgX2NyZWF0ZUNsYXNzKFZhbGlkYXRpb25zLCBbewogICAga2V5OiAiZ2V0RXJyb3IiLAogICAgdmFsdWU6IGZ1bmN0aW9uIGdldEVycm9yKHJpLCBjaSkgewogICAgICByZXR1cm4gdGhpcy5lcnJvcnMuZ2V0KCIiLmNvbmNhdChyaSwgIl8iKS5jb25jYXQoY2kpKTsKICAgIH0KICB9LCB7CiAgICBrZXk6ICJ2YWxpZGF0ZSIsCiAgICB2YWx1ZTogZnVuY3Rpb24gdmFsaWRhdGUocmksIGNpLCB0ZXh0KSB7CiAgICAgIHZhciB2ID0gdGhpcy5nZXQocmksIGNpKTsKICAgICAgdmFyIGtleSA9ICIiLmNvbmNhdChyaSwgIl8iKS5jb25jYXQoY2kpOwogICAgICB2YXIgZXJyb3JzID0gdGhpcy5lcnJvcnM7CgogICAgICBpZiAodiAhPT0gbnVsbCkgewogICAgICAgIHZhciBfdiR2YWxpZGF0b3IkdmFsaWRhdGUgPSB2LnZhbGlkYXRvci52YWxpZGF0ZSh0ZXh0KSwKICAgICAgICAgICAgX3YkdmFsaWRhdG9yJHZhbGlkYXRlMiA9IF9zbGljZWRUb0FycmF5KF92JHZhbGlkYXRvciR2YWxpZGF0ZSwgMiksCiAgICAgICAgICAgIGZsYWcgPSBfdiR2YWxpZGF0b3IkdmFsaWRhdGUyWzBdLAogICAgICAgICAgICBtZXNzYWdlID0gX3YkdmFsaWRhdG9yJHZhbGlkYXRlMlsxXTsKCiAgICAgICAgaWYgKCFmbGFnKSB7CiAgICAgICAgICBlcnJvcnMuc2V0KGtleSwgbWVzc2FnZSk7CiAgICAgICAgfSBlbHNlIHsKICAgICAgICAgIGVycm9ycy5kZWxldGUoa2V5KTsKICAgICAgICB9CiAgICAgIH0gZWxzZSB7CiAgICAgICAgZXJyb3JzLmRlbGV0ZShrZXkpOwogICAgICB9CgogICAgICByZXR1cm4gdHJ1ZTsKICAgIH0gLy8gdHlwZTogZGF0ZXxudW1iZXJ8cGhvbmV8ZW1haWx8bGlzdAogICAgLy8gdmFsaWRhdG9yOiB7IHJlcXVpcmVkLCB2YWx1ZSwgb3BlcmF0b3IgfQoKICB9LCB7CiAgICBrZXk6ICJhZGQiLAogICAgdmFsdWU6IGZ1bmN0aW9uIGFkZChtb2RlLCByZWYsIF9yZWYyKSB7CiAgICAgIHZhciB0eXBlID0gX3JlZjIudHlwZSwKICAgICAgICAgIHJlcXVpcmVkID0gX3JlZjIucmVxdWlyZWQsCiAgICAgICAgICB2YWx1ZSA9IF9yZWYyLnZhbHVlLAogICAgICAgICAgb3BlcmF0b3IgPSBfcmVmMi5vcGVyYXRvcjsKICAgICAgdmFyIHZhbGlkYXRvciA9IG5ldyBWYWxpZGF0b3IodHlwZSwgcmVxdWlyZWQsIHZhbHVlLCBvcGVyYXRvcik7CiAgICAgIHZhciB2ID0gdGhpcy5nZXRCeVZhbGlkYXRvcih2YWxpZGF0b3IpOwoKICAgICAgaWYgKHYgIT09IG51bGwpIHsKICAgICAgICB2LmFkZFJlZihyZWYpOwogICAgICB9IGVsc2UgewogICAgICAgIHRoaXMuXy5wdXNoKG5ldyBWYWxpZGF0aW9uKG1vZGUsIFtyZWZdLCB2YWxpZGF0b3IpKTsKICAgICAgfQogICAgfQogIH0sIHsKICAgIGtleTogImdldEJ5VmFsaWRhdG9yIiwKICAgIHZhbHVlOiBmdW5jdGlvbiBnZXRCeVZhbGlkYXRvcih2YWxpZGF0b3IpIHsKICAgICAgZm9yICh2YXIgaSA9IDA7IGkgPCB0aGlzLl8ubGVuZ3RoOyBpICs9IDEpIHsKICAgICAgICB2YXIgdiA9IHRoaXMuX1tpXTsKCiAgICAgICAgaWYgKHYudmFsaWRhdG9yLmVxdWFscyh2YWxpZGF0b3IpKSB7CiAgICAgICAgICByZXR1cm4gdjsKICAgICAgICB9CiAgICAgIH0KCiAgICAgIHJldHVybiBudWxsOwogICAgfQogIH0sIHsKICAgIGtleTogImdldCIsCiAgICB2YWx1ZTogZnVuY3Rpb24gZ2V0KHJpLCBjaSkgewogICAgICBmb3IgKHZhciBpID0gMDsgaSA8IHRoaXMuXy5sZW5ndGg7IGkgKz0gMSkgewogICAgICAgIHZhciB2ID0gdGhpcy5fW2ldOwogICAgICAgIGlmICh2LmluY2x1ZGVzKHJpLCBjaSkpIHJldHVybiB2OwogICAgICB9CgogICAgICByZXR1cm4gbnVsbDsKICAgIH0KICB9LCB7CiAgICBrZXk6ICJyZW1vdmUiLAogICAgdmFsdWU6IGZ1bmN0aW9uIHJlbW92ZShjZWxsUmFuZ2UpIHsKICAgICAgdGhpcy5lYWNoKGZ1bmN0aW9uIChpdCkgewogICAgICAgIGl0LnJlbW92ZShjZWxsUmFuZ2UpOwogICAgICB9KTsKICAgIH0KICB9LCB7CiAgICBrZXk6ICJlYWNoIiwKICAgIHZhbHVlOiBmdW5jdGlvbiBlYWNoKGNiKSB7CiAgICAgIHRoaXMuXy5mb3JFYWNoKGZ1bmN0aW9uIChpdCkgewogICAgICAgIHJldHVybiBjYihpdCk7CiAgICAgIH0pOwogICAgfQogIH0sIHsKICAgIGtleTogImdldERhdGEiLAogICAgdmFsdWU6IGZ1bmN0aW9uIGdldERhdGEoKSB7CiAgICAgIHJldHVybiB0aGlzLl8uZmlsdGVyKGZ1bmN0aW9uIChpdCkgewogICAgICAgIHJldHVybiBpdC5yZWZzLmxlbmd0aCA+IDA7CiAgICAgIH0pLm1hcChmdW5jdGlvbiAoaXQpIHsKICAgICAgICByZXR1cm4gaXQuZ2V0RGF0YSgpOwogICAgICB9KTsKICAgIH0KICB9LCB7CiAgICBrZXk6ICJzZXREYXRhIiwKICAgIHZhbHVlOiBmdW5jdGlvbiBzZXREYXRhKGQpIHsKICAgICAgdGhpcy5fID0gZC5tYXAoZnVuY3Rpb24gKGl0KSB7CiAgICAgICAgcmV0dXJuIFZhbGlkYXRpb24udmFsdWVPZihpdCk7CiAgICAgIH0pOwogICAgfQogIH1dKTsKCiAgcmV0dXJuIFZhbGlkYXRpb25zOwp9KCk7CgpleHBvcnQgZGVmYXVsdCB7fTsKZXhwb3J0IHsgVmFsaWRhdGlvbnMgfTs="},{"version":3,"sources":["D:/代码/del_demo/VisualizationExcle_Demo/src/components/x-spreadsheet/core/validation.js"],"names":["Validator","CellRange","Validation","mode","refs","validator","ri","ci","i","length","cr","valueOf","includes","ref","remove","push","cellRange","nrefs","forEach","it","intersects","crs","difference","it1","toString","type","required","operator","value","Validations","_","errors","Map","get","text","v","key","validate","flag","message","set","delete","getByValidator","addRef","equals","each","cb","filter","map","getData","d"],"mappings":"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","sourcesContent":["import Validator from './validator';\r\nimport { CellRange } from './cell_range';\r\n\r\nclass Validation {\r\n  constructor(mode, refs, validator) {\r\n    this.refs = refs;\r\n    this.mode = mode; // cell\r\n    this.validator = validator;\r\n  }\r\n\r\n  includes(ri, ci) {\r\n    const { refs } = this;\r\n    for (let i = 0; i < refs.length; i += 1) {\r\n      const cr = CellRange.valueOf(refs[i]);\r\n      if (cr.includes(ri, ci)) return true;\r\n    }\r\n    return false;\r\n  }\r\n\r\n  addRef(ref) {\r\n    this.remove(CellRange.valueOf(ref));\r\n    this.refs.push(ref);\r\n  }\r\n\r\n  remove(cellRange) {\r\n    const nrefs = [];\r\n    this.refs.forEach((it) => {\r\n      const cr = CellRange.valueOf(it);\r\n      if (cr.intersects(cellRange)) {\r\n        const crs = cr.difference(cellRange);\r\n        crs.forEach(it1 => nrefs.push(it1.toString()));\r\n      } else {\r\n        nrefs.push(it);\r\n      }\r\n    });\r\n    this.refs = nrefs;\r\n  }\r\n\r\n  getData() {\r\n    const { refs, mode, validator } = this;\r\n    const {\r\n      type, required, operator, value,\r\n    } = validator;\r\n    return {\r\n      refs, mode, type, required, operator, value,\r\n    };\r\n  }\r\n\r\n  static valueOf({\r\n    refs, mode, type, required, operator, value,\r\n  }) {\r\n    return new Validation(mode, refs, new Validator(type, required, value, operator));\r\n  }\r\n}\r\nclass Validations {\r\n  constructor() {\r\n    this._ = [];\r\n    // ri_ci: errMessage\r\n    this.errors = new Map();\r\n  }\r\n\r\n  getError(ri, ci) {\r\n    return this.errors.get(`${ri}_${ci}`);\r\n  }\r\n\r\n  validate(ri, ci, text) {\r\n    const v = this.get(ri, ci);\r\n    const key = `${ri}_${ci}`;\r\n    const { errors } = this;\r\n    if (v !== null) {\r\n      const [flag, message] = v.validator.validate(text);\r\n      if (!flag) {\r\n        errors.set(key, message);\r\n      } else {\r\n        errors.delete(key);\r\n      }\r\n    } else {\r\n      errors.delete(key);\r\n    }\r\n    return true;\r\n  }\r\n\r\n  // type: date|number|phone|email|list\r\n  // validator: { required, value, operator }\r\n  add(mode, ref, {\r\n    type, required, value, operator,\r\n  }) {\r\n    const validator = new Validator(\r\n      type, required, value, operator,\r\n    );\r\n    const v = this.getByValidator(validator);\r\n    if (v !== null) {\r\n      v.addRef(ref);\r\n    } else {\r\n      this._.push(new Validation(mode, [ref], validator));\r\n    }\r\n  }\r\n\r\n  getByValidator(validator) {\r\n    for (let i = 0; i < this._.length; i += 1) {\r\n      const v = this._[i];\r\n      if (v.validator.equals(validator)) {\r\n        return v;\r\n      }\r\n    }\r\n    return null;\r\n  }\r\n\r\n  get(ri, ci) {\r\n    for (let i = 0; i < this._.length; i += 1) {\r\n      const v = this._[i];\r\n      if (v.includes(ri, ci)) return v;\r\n    }\r\n    return null;\r\n  }\r\n\r\n  remove(cellRange) {\r\n    this.each((it) => {\r\n      it.remove(cellRange);\r\n    });\r\n  }\r\n\r\n  each(cb) {\r\n    this._.forEach(it => cb(it));\r\n  }\r\n\r\n  getData() {\r\n    return this._.filter(it => it.refs.length > 0).map(it => it.getData());\r\n  }\r\n\r\n  setData(d) {\r\n    this._ = d.map(it => Validation.valueOf(it));\r\n  }\r\n}\r\n\r\nexport default {};\r\nexport {\r\n  Validations,\r\n};\r\n"]}]}