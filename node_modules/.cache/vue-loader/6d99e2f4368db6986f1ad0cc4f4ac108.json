{"remainingRequest":"C:\\Users\\吴建明\\Desktop\\VisualizationExcle_Demo\\node_modules\\vue-loader-v16\\dist\\index.js??ref--0-1!C:\\Users\\吴建明\\Desktop\\VisualizationExcle_Demo\\src\\components\\TestExcel.vue?vue&type=template&id=542ef6c5&scoped=true","dependencies":[{"path":"C:\\Users\\吴建明\\Desktop\\VisualizationExcle_Demo\\src\\components\\TestExcel.vue","mtime":1615365285204},{"path":"C:\\Users\\吴建明\\Desktop\\VisualizationExcle_Demo\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1615364186494},{"path":"C:\\Users\\吴建明\\Desktop\\VisualizationExcle_Demo\\node_modules\\babel-loader\\lib\\index.js","mtime":1615364186192},{"path":"C:\\Users\\吴建明\\Desktop\\VisualizationExcle_Demo\\node_modules\\vue-loader-v16\\dist\\templateLoader.js","mtime":1615364197442},{"path":"C:\\Users\\吴建明\\Desktop\\VisualizationExcle_Demo\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1615364186494},{"path":"C:\\Users\\吴建明\\Desktop\\VisualizationExcle_Demo\\node_modules\\vue-loader-v16\\dist\\index.js","mtime":1615364197433}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:DQogIDxkaXY+DQogICAgPGJ1dHRvbiBjbGFzcz0iYnRuIiBAY2xpY2s9InJlcXVlc3RFeGNsZVN0cmVhbSI+5rWL6K+VPC9idXR0b24+DQogICAgPGRpdiBjbGFzcz0iY29udGVudCI+DQogICAgICA8ZGl2IGlkPSJ4c3MtZGVtbyIgLz4NCiAgICA8L2Rpdj4NCiAgPC9kaXY+DQo="},{"version":3,"sources":["C:\\Users\\吴建明\\Desktop\\VisualizationExcle_Demo\\src\\components\\TestExcel.vue"],"names":[],"mappings":";EACE,CAAC,CAAC,CAAC,CAAC;IACF,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;IAC1D,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;MAClB,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC;IACtB,CAAC,CAAC,CAAC,CAAC,CAAC;EACP,CAAC,CAAC,CAAC,CAAC,CAAC","file":"C:/Users/吴建明/Desktop/VisualizationExcle_Demo/src/components/TestExcel.vue","sourceRoot":"","sourcesContent":["<template>\r\n  <div>\r\n    <button class=\"btn\" @click=\"requestExcleStream\">测试</button>\r\n    <div class=\"content\">\r\n      <div id=\"xss-demo\" />\r\n    </div>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nimport axios from 'axios'\r\nimport Spreadsheet from '@/components/x-spreadsheet';\r\nimport XStyle from 'xlsx-style';\r\nimport Exchange from '@/util/xlsx-exchange';\r\nexport default {\r\n  name: \"TestExcel\",\r\n  async mounted() {\r\n    this.instantiateSheet();\r\n  },\r\n  methods: {\r\n    requestExcleStream() {\r\n      axios({\r\n        method: 'get',\r\n        url: 'http://localhost:3006/excelExport',\r\n        responseType: 'blob'\r\n      }).then((res) => {\r\n        const self = this\r\n        const result = res.data\r\n        console.log('result', result)\r\n        // debugger\r\n        this.flobFileSize = result.size || 0;\r\n        if (result instanceof Blob) {\r\n          var reader = new FileReader();\r\n          reader.onload = function (e) {\r\n            let data = e.target.result;\r\n            console.log(data)\r\n            if (data) {\r\n              let workbook = XStyle.read(data, { type: \"binary\", cellStyles: true });\r\n              let out = Exchange.stox(workbook);\r\n              self.setXsheetData(out)\r\n            } else {\r\n              self.setXsheetData([])\r\n            }\r\n          };\r\n          reader.readAsBinaryString(result);\r\n        } else {\r\n          self.setXsheetData([])\r\n        }\r\n      })\r\n    },\r\n    // 设置xsheet 数据\r\n    setXsheetData(out) {\r\n      this.sheet.loadData(out);\r\n      if (out.length) {\r\n        let colLen = Object.keys(out[0].rows[0].cells).length || 10;\r\n        // let colLen = this.getTableColLen(out) || 10;\r\n        let rowLen = Object.keys(out[0].rows).length || 10;\r\n        this.sheet.sheet.data.rows.len = rowLen;\r\n        this.sheet.sheet.data.cols.len = colLen;\r\n        this.sheet.reRender();\r\n      }\r\n    },\r\n    // 实例化 xsheet\r\n    instantiateSheet() {\r\n      let queryListHeight = 0;\r\n      if (this.$refs.queryList)\r\n        queryListHeight = this.$refs.queryList.$el.offsetHeight || 0;\r\n      this.sheet = new Spreadsheet(document.getElementById(\"xss-demo\"), {\r\n        mode: \"read\", // edit | read\r\n        showToolbar: false,\r\n        showGrid: false,\r\n        showContextmenu: false,\r\n        view: {\r\n          height: () =>\r\n            document.documentElement.clientHeight - 180 - queryListHeight,\r\n          width: () => document.documentElement.clientWidth - 300,\r\n        },\r\n        row: {\r\n          height: 25,\r\n          len: 100,\r\n        },\r\n        col: {\r\n          len: 16,\r\n          width: 100,\r\n          indexWidth: 60,\r\n          minWidth: 60,\r\n        },\r\n      });\r\n    },\r\n  }\r\n}\r\n</script>\r\n\r\n<style scoped>\r\n.btn {\r\n  width: 100px;\r\n  height: 36px;\r\n  cursor: pointer;\r\n}\r\n</style>"]}]}